{
  final List<Locker> lockers=new ArrayList<>(locks.length);
  for (int i=0; i < locks.length; i++) {
    lockers.add(new Locker(locks[i]));
  }
  int lockCount=0;
  for (  final Future<Boolean> result : executor.invokeAll(lockers)) {
    if (result.get()) {
      lockCount++;
    }
  }
  assertTrue("Lock count should be <= 1 but was " + lockCount,lockCount <= 1);
  final List<Releaser> releasers=new ArrayList<>(locks.length);
  for (int i=0; i < locks.length; i++) {
    releasers.add(new Releaser(locks[i]));
  }
  int releaseCount=0;
  for (  final Future<Boolean> result : executor.invokeAll(lockers)) {
    if (result.get()) {
      releaseCount++;
    }
  }
  assertTrue("Release count should be <= 1 but was " + releaseCount,releaseCount <= 1);
}
