{
  final String targetService=request.getParameter(CasProtocolConstants.PARAMETER_TARGET_SERVICE);
  final String service=request.getParameter(CasProtocolConstants.PARAMETER_SERVICE);
  final String serviceAttribute=(String)request.getAttribute(CasProtocolConstants.PARAMETER_SERVICE);
  final String method=request.getParameter(CasProtocolConstants.PARAMETER_METHOD);
  final String serviceToUse;
  if (StringUtils.hasText(targetService)) {
    serviceToUse=targetService;
  }
 else   if (StringUtils.hasText(service)) {
    serviceToUse=service;
  }
 else {
    serviceToUse=serviceAttribute;
  }
  if (!StringUtils.hasText(serviceToUse)) {
    return null;
  }
  final String id=cleanupUrl(serviceToUse);
  final String artifactId=request.getParameter(CasProtocolConstants.PARAMETER_TICKET);
  final Response.ResponseType type="POST".equalsIgnoreCase(method) ? Response.ResponseType.POST : Response.ResponseType.REDIRECT;
  final WebApplicationService webApplicationService=new SimpleWebApplicationServiceImpl(id,serviceToUse,artifactId,new WebApplicationServiceResponseBuilder(type));
  return webApplicationService;
}
