{
  final SpnegoCredential ntlmCredential=(SpnegoCredential)credential;
  final byte[] src=ntlmCredential.getInitToken();
  UniAddress dc=null;
  boolean success=false;
  try {
    if (this.loadBalance) {
      if (this.includePattern != null) {
        final NbtAddress[] dcs=NbtAddress.getAllByName(this.domainController,0x1C,null,null);
        for (        NbtAddress dc2 : dcs) {
          if (dc2.getHostAddress().matches(this.includePattern)) {
            dc=new UniAddress(dc2);
            break;
          }
        }
      }
 else {
        dc=new UniAddress(NbtAddress.getByName(this.domainController,0x1C,null));
      }
    }
 else {
      dc=UniAddress.getByName(this.domainController,true);
    }
    final byte[] challenge=SmbSession.getChallenge(dc);
switch (src[8]) {
case 1:
      logger.debug("Type 1 received");
    final Type1Message type1=new Type1Message(src);
  final Type2Message type2=new Type2Message(type1,challenge,null);
logger.debug("Type 2 returned. Setting next token.");
ntlmCredential.setNextToken(type2.toByteArray());
break;
case 3:
logger.debug("Type 3 received");
final Type3Message type3=new Type3Message(src);
final byte[] lmResponse=type3.getLMResponse() == null ? new byte[0] : type3.getLMResponse();
final byte[] ntResponse=type3.getNTResponse() == null ? new byte[0] : type3.getNTResponse();
final NtlmPasswordAuthentication ntlm=new NtlmPasswordAuthentication(type3.getDomain(),type3.getUser(),challenge,lmResponse,ntResponse);
logger.debug("Trying to authenticate {} with domain controller",type3.getUser());
try {
SmbSession.logon(dc,ntlm);
ntlmCredential.setPrincipal(this.principalFactory.createPrincipal(type3.getUser()));
success=true;
}
 catch (final SmbAuthException sae) {
throw new FailedLoginException(sae.getMessage());
}
break;
default :
logger.debug("Unknown type: {}",src[8]);
}
}
 catch (final Exception e) {
throw new FailedLoginException(e.getMessage());
}
if (!success) {
throw new FailedLoginException();
}
return new HandlerResult(this,new BasicCredentialMetaData(ntlmCredential),ntlmCredential.getPrincipal());
}
