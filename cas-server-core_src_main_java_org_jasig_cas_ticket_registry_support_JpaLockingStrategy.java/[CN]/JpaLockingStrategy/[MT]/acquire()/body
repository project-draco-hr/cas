{
  Lock lock;
  try {
    lock=entityManager.find(Lock.class,applicationId,LockModeType.PESSIMISTIC_WRITE);
  }
 catch (  PersistenceException e) {
    logger.debug("{} failed querying for {} lock.",new Object[]{uniqueId,applicationId,e});
    return false;
  }
  boolean result=false;
  if (lock != null) {
    final Date expDate=lock.getExpirationDate();
    if (lock.getUniqueId() == null) {
      logger.debug("{} trying to acquire {} lock.",uniqueId,applicationId);
      result=acquire(entityManager,lock);
    }
 else     if (expDate != null && new Date().after(expDate)) {
      logger.debug("{} trying to acquire expired {} lock.",uniqueId,applicationId);
      result=acquire(entityManager,lock);
    }
  }
 else {
    logger.debug("Creating {} lock initially held by {}.",applicationId,uniqueId);
    result=acquire(entityManager,new Lock());
  }
  return result;
}
