{
  final String ticketGrantingTicketId=WebUtils.getTicketGrantingTicketId(context);
  try {
    final Service service=WebUtils.getService(context);
    final AuthenticationResult authenticationResult=this.authenticationSystemSupport.handleAndFinalizeSingleAuthenticationTransaction(service,credential);
    final ServiceTicket serviceTicketId=this.centralAuthenticationService.grantServiceTicket(ticketGrantingTicketId,service,authenticationResult);
    WebUtils.putServiceTicketInRequestScope(context,serviceTicketId);
    WebUtils.putWarnCookieIfRequestParameterPresent(this.warnCookieGenerator,context);
    return newEvent(AbstractCasWebflowConfigurer.TRANSITION_ID_WARN);
  }
 catch (  final AuthenticationException e) {
    return newEvent(AbstractCasWebflowConfigurer.EVENT_AUTHENTICATION_FAILURE,e);
  }
catch (  final AbstractTicketException e) {
    return newEvent(AbstractCasWebflowConfigurer.EVENT_AUTHENTICATION_FAILURE,e);
  }
}
