{
  try {
    final Service service=WebUtils.getService(context);
    final AuthenticationResult authenticationResult=this.authenticationSystemSupport.handleAndFinalizeSingleAuthenticationTransaction(service,credential);
    final TicketGrantingTicket tgt=this.centralAuthenticationService.createTicketGrantingTicket(authenticationResult);
    WebUtils.putTicketGrantingTicketInScopes(context,tgt);
    WebUtils.putWarnCookieIfRequestParameterPresent(this.warnCookieGenerator,context);
    putPublicWorkstationToFlowIfRequestParameterPresent(context);
    if (addWarningMessagesToMessageContextIfNeeded(tgt,messageContext)) {
      return newEvent(SUCCESS_WITH_WARNINGS);
    }
    return newEvent(AbstractCasWebflowConfigurer.TRANSITION_ID_SUCCESS);
  }
 catch (  final AuthenticationException e) {
    logger.debug(e.getMessage(),e);
    return newEvent(AbstractCasWebflowConfigurer.EVENT_AUTHENTICATION_FAILURE,e);
  }
catch (  final Exception e) {
    logger.debug(e.getMessage(),e);
    return newEvent(AbstractCasWebflowConfigurer.EVENT_AUTHENTICATION_FAILURE,e);
  }
}
