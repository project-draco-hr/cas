{
  try {
    final AuthenticationContextBuilder builder=new DefaultAuthenticationContextBuilder(this.authenticationSystemSupport.getPrincipalElectionStrategy());
    final AuthenticationTransaction transaction=AuthenticationTransaction.wrap(credential);
    this.authenticationSystemSupport.getAuthenticationTransactionManager().handle(transaction,builder);
    WebUtils.putWarnCookieIfRequestParameterPresent(this.warnCookieGenerator,context);
    WebUtils.putPublicWorkstationToFlowIfRequestParameterPresent(context);
    return this.authenticationContextWebflowEventResolver.resolve(builder,context,messageContext);
  }
 catch (  final AuthenticationException e) {
    logger.debug(e.getMessage(),e);
    return newEvent(AUTHENTICATION_FAILURE,e);
  }
catch (  final Exception e) {
    logger.debug(e.getMessage(),e);
    return newEvent(AbstractCasWebflowConfigurer.TRANSITION_ID_ERROR,e);
  }
}
