{
  if (StringUtils.hasText(id)) {
    final RegisteredService regService=this.servicesManager.findServiceBy(Long.parseLong(id));
    if (regService != null) {
      LOGGER.debug("Loaded service " + regService.getServiceId());
      model.addAttribute(COMMAND_NAME,regService);
    }
 else {
      LOGGER.debug("Invalid service id specified.");
      model.addAttribute(COMMAND_NAME,new RegexRegisteredService());
    }
  }
 else {
    LOGGER.debug("Preparing registered service to add...");
    model.addAttribute(COMMAND_NAME,new RegexRegisteredService());
  }
  final List<String> possibleAttributeNames=new ArrayList<String>();
  possibleAttributeNames.addAll(this.personAttributeDao.getPossibleUserAttributeNames());
  Collections.sort(possibleAttributeNames);
  model.addAttribute("availableAttributes",possibleAttributeNames);
  final List<String> possibleUsernameAttributeNames=new ArrayList<String>();
  possibleUsernameAttributeNames.addAll(possibleAttributeNames);
  possibleUsernameAttributeNames.add(0,"");
  model.addAttribute("availableUsernameAttributes",possibleUsernameAttributeNames);
  final String path=request.getServletPath().replace("/","").replace(".html","").concat("ServiceView");
  model.addAttribute("pageTitle",path);
  model.addAttribute("commandName",COMMAND_NAME);
  return new ModelAndView("editServiceView");
}
