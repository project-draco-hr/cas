{
  updateModelMap(model,request);
  this.validator.validate(service,result);
  if (result.hasErrors()) {
    return new ModelAndView(VIEW_NAME);
  }
  RegisteredService svcToUse=service;
  if (service.getId() == RegisteredService.INITIAL_IDENTIFIER_VALUE && service.getServiceId().startsWith("^")) {
    LOGGER.debug("Detected regular expression starting with ^");
    final RegexRegisteredService regexService=new RegexRegisteredService();
    regexService.copyFrom(service);
    svcToUse=regexService;
  }
 else   if (!service.getServiceId().startsWith("^") && service instanceof RegexRegisteredService) {
    logger.debug("Detected ant expression " + service.getServiceId());
    final RegisteredServiceImpl regexService=new RegisteredServiceImpl();
    regexService.copyFrom(service);
    service=regexService;
  }
  this.servicesManager.save(svcToUse);
  LOGGER.info("Saved changes to service " + svcToUse.getId());
  final ModelAndView modelAndView=new ModelAndView(new RedirectView("manage.html#" + svcToUse.getId(),true));
  modelAndView.addObject("action","add");
  modelAndView.addObject("id",svcToUse.getId());
  return modelAndView;
}
