{
  try {
    final RadiusTokenCredential radiusCredential=(RadiusTokenCredential)credential;
    final String password=radiusCredential.getToken();
    final RequestContext context=RequestContextHolder.getRequestContext();
    final String username=WebUtils.getAuthentication(context).getPrincipal().getId();
    final Pair<Boolean,Optional<Map<String,Object>>> result=RadiusUtils.authenticate(username,password,this.servers,this.failoverOnAuthenticationFailure,this.failoverOnException);
    if (result.getFirst()) {
      return createHandlerResult(credential,this.principalFactory.createPrincipal(username,result.getSecond().get()),new ArrayList<>());
    }
    throw new FailedLoginException("Radius authentication failed for user " + username);
  }
 catch (  final Exception e) {
    throw new FailedLoginException("Radius authentication failed " + e.getMessage());
  }
}
