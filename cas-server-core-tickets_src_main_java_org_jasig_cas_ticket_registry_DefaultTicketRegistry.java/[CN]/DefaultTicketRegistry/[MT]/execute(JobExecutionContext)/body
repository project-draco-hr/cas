{
  SpringBeanAutowiringSupport.processInjectionBasedOnCurrentContext(this);
  try {
    logger.info("Beginning ticket cleanup...");
    final Collection<Ticket> ticketsToRemove=Collections2.filter(this.getTickets(),new Predicate<Ticket>(){
      @Override public boolean apply(      @Nullable final Ticket ticket){
        if (ticket.isExpired()) {
          if (ticket instanceof TicketGrantingTicket) {
            logger.debug("Cleaning up expired ticket-granting ticket [{}]",ticket.getId());
            logoutManager.performLogout((TicketGrantingTicket)ticket);
            deleteTicket(ticket.getId());
          }
 else           if (ticket instanceof ServiceTicket) {
            logger.debug("Cleaning up expired service ticket [{}]",ticket.getId());
            deleteTicket(ticket.getId());
          }
 else {
            logger.warn("Unknown ticket type [{} found to clean",ticket.getClass().getSimpleName());
          }
          return true;
        }
        return false;
      }
    }
);
    logger.info("{} expired tickets found and removed.",ticketsToRemove.size());
  }
 catch (  final Exception e) {
    logger.error(e.getMessage(),e);
  }
}
