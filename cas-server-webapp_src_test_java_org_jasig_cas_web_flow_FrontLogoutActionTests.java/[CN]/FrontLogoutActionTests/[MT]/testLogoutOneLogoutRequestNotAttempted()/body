{
  final String FAKE_URL="http://url";
  LogoutRequest logoutRequest=new LogoutRequest(TICKET_ID,new SimpleWebApplicationServiceImpl(FAKE_URL));
  this.requestContext.getFlowScope().put(FrontLogoutAction.LOGOUT_REQUESTS,Arrays.asList(logoutRequest));
  this.requestContext.getFlowScope().put(FrontLogoutAction.LOGOUT_INDEX,0);
  final Event event=this.frontLogoutAction.doExecute(this.requestContext);
  assertEquals(FrontLogoutAction.REDIRECT_APP_EVENT,event.getId());
  List<LogoutRequest> list=(List<LogoutRequest>)this.requestContext.getFlowScope().get(FrontLogoutAction.LOGOUT_REQUESTS);
  assertEquals(1,list.size());
  final String url=(String)event.getAttributes().get("logoutUrl");
  assertTrue(url.startsWith(FAKE_URL + "?SAMLRequest="));
  assertTrue(url.endsWith("&RelayState=" + FLOW_EXECUTION_KEY));
  final byte[] samlMessage=Base64.decodeBase64(StringUtils.substringBetween(url,"?SAMLRequest=","&RelayState="));
  final Inflater decompresser=new Inflater();
  decompresser.setInput(samlMessage);
  final byte[] result=new byte[1000];
  decompresser.inflate(result);
  decompresser.end();
  final String message=new String(result);
  assertTrue(message.startsWith("<samlp:LogoutRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" ID=\""));
  assertTrue(message.indexOf("<samlp:SessionIndex>" + TICKET_ID + "</samlp:SessionIndex>") >= 0);
}
