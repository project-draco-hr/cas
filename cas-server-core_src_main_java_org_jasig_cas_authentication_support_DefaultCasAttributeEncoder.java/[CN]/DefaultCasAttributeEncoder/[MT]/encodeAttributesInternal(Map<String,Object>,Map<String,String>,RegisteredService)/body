{
  try {
    if (!initializeCipherBasedOnServicePublicKey(service)) {
      return;
    }
    encodeAndEncryptCredentialPassword(attributes,cachedAttributesToEncode);
    encodeAndEncryptProxyGrantingTicket(attributes,cachedAttributesToEncode);
  }
 catch (  final Exception e) {
    throw new RuntimeException(e);
  }
}
