{
  final String state=authentication.getAttributes().get(OAuthConstants.STATE).toString();
  final String nonce=authentication.getAttributes().get(OAuthConstants.NONCE).toString();
  final AccessToken accessToken=generateAccessToken(service,authentication,context);
  logger.debug("Generated Oauth access token: {}",accessToken);
  final URIBuilder builder=new URIBuilder(redirectUri);
  final StringBuilder stringBuilder=new StringBuilder();
  stringBuilder.append(OAuthConstants.ACCESS_TOKEN).append('=').append(accessToken.getId()).append('&').append(OAuthConstants.TOKEN_TYPE).append('=').append(OAuthConstants.TOKEN_TYPE_BEARER).append('&').append(OAuthConstants.EXPIRES).append('=').append(this.timeout);
  if (StringUtils.isNotBlank(state)) {
    stringBuilder.append('&').append(OAuthConstants.STATE).append('=').append(EncodingUtils.urlEncode(state));
  }
  if (StringUtils.isNotBlank(nonce)) {
    stringBuilder.append('&').append(OAuthConstants.NONCE).append('=').append(EncodingUtils.urlEncode(nonce));
  }
  builder.setFragment(stringBuilder.toString());
  return builder.toString();
}
