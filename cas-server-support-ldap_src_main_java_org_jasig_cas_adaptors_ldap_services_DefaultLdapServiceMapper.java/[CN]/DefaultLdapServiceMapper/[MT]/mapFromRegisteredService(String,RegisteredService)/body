{
  if (svc.getId() == RegisteredService.INITIAL_IDENTIFIER_VALUE) {
    ((AbstractRegisteredService)svc).setId(System.nanoTime());
  }
  final String newDn=getDnForRegisteredService(dn,svc);
  LOGGER.debug("Creating entry {}",newDn);
  final Collection<LdapAttribute> attrs=new ArrayList<LdapAttribute>();
  attrs.add(new LdapAttribute(this.idAttribute,String.valueOf(svc.getId())));
  attrs.add(new LdapAttribute(this.serviceIdAttribute,svc.getServiceId()));
  attrs.add(new LdapAttribute(this.serviceNameAttribute,svc.getName()));
  attrs.add(new LdapAttribute(this.serviceDescriptionAttribute,svc.getDescription()));
  attrs.add(new LdapAttribute(this.serviceEnabledAttribute,Boolean.toString(svc.isEnabled()).toUpperCase()));
  attrs.add(new LdapAttribute(this.serviceAnonymousAccessAttribute,Boolean.toString(svc.isAnonymousAccess()).toUpperCase()));
  attrs.add(new LdapAttribute(this.serviceSsoEnabledAttribute,Boolean.toString(svc.isSsoEnabled()).toUpperCase()));
  attrs.add(new LdapAttribute(this.evaluationOrderAttribute,String.valueOf(svc.getEvaluationOrder())));
  attrs.add(new LdapAttribute(this.serviceThemeAttribute,svc.getTheme()));
  attrs.add(new LdapAttribute(this.usernameAttribute,svc.getUsernameAttribute()));
  if (svc.getAttributeReleasePolicy() != null) {
    final byte[] data=SerializationUtils.serialize(svc.getAttributeReleasePolicy());
    final LdapAttribute attr=new LdapAttribute(this.attributeReleasePolicyAttribute,data);
    attrs.add(attr);
    attrs.add(attr);
  }
}
