{
  final LdapAttribute attr=entry.getAttribute(this.serviceIdAttribute);
  if (attr != null) {
    final AbstractRegisteredService s=getRegisteredService(attr.getStringValue());
    if (s != null) {
      s.setId(LdapUtils.getLong(entry,this.idAttribute,Long.valueOf(entry.getDn().hashCode())));
      s.setServiceId(LdapUtils.getString(entry,this.serviceIdAttribute));
      s.setName(LdapUtils.getString(entry,this.namingAttribute));
      s.setDescription(LdapUtils.getString(entry,this.serviceDescriptionAttribute));
      s.setTheme(LdapUtils.getString(entry,this.serviceThemeAttribute));
      s.setEvaluationOrder(LdapUtils.getLong(entry,this.evaluationOrderAttribute).intValue());
      s.setUsernameAttribute(LdapUtils.getString(entry,this.usernameAttribute));
      s.setEnabled(LdapUtils.getBoolean(entry,this.serviceEnabledAttribute));
      s.setAllowedToProxy(LdapUtils.getBoolean(entry,this.serviceAllowedToProxyAttribute));
      s.setAnonymousAccess(LdapUtils.getBoolean(entry,this.serviceAnonymousAccessAttribute));
      s.setSsoEnabled(LdapUtils.getBoolean(entry,this.serviceSsoEnabledAttribute));
      s.setAllowedAttributes(new ArrayList<String>(getMultiValuedAttributeValues(entry,this.serviceAllowedAttributesAttribute)));
      s.setRequiredHandlers(new HashSet<String>(getMultiValuedAttributeValues(entry,this.requiredHandlersAttribute)));
    }
    return s;
  }
  return null;
}
