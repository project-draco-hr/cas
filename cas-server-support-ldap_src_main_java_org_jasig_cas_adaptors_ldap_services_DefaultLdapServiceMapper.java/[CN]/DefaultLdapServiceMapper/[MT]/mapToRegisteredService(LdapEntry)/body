{
  final LdapAttribute attr=entry.getAttribute(this.serviceIdAttribute);
  if (attr != null) {
    final AbstractRegisteredService s=getRegisteredService(attr.getStringValue());
    if (s != null) {
      s.setId(LdapUtils.getLong(entry,this.idAttribute,Long.valueOf(entry.getDn().hashCode())));
      s.setServiceId(LdapUtils.getString(entry,this.serviceIdAttribute));
      s.setName(LdapUtils.getString(entry,this.serviceNameAttribute));
      s.setDescription(LdapUtils.getString(entry,this.serviceDescriptionAttribute));
      s.setEnabled(LdapUtils.getBoolean(entry,this.serviceEnabledAttribute));
      s.setTheme(LdapUtils.getString(entry,this.serviceThemeAttribute));
      s.setEvaluationOrder(LdapUtils.getLong(entry,this.evaluationOrderAttribute).intValue());
      s.setUsernameAttribute(LdapUtils.getString(entry,this.usernameAttribute));
      s.setAnonymousAccess(LdapUtils.getBoolean(entry,this.serviceAnonymousAccessAttribute));
      s.setSsoEnabled(LdapUtils.getBoolean(entry,this.serviceSsoEnabledAttribute));
      s.setRequiredHandlers(new HashSet<String>(getMultiValuedAttributeValues(entry,this.requiredHandlersAttribute)));
      final byte[] data=LdapUtils.getBinary(entry,this.attributeReleasePolicyAttribute);
      if (data != null && data.length > 0) {
        final AttributeReleasePolicy policy=(AttributeReleasePolicy)SerializationUtils.deserialize(data);
        s.setAttributeReleasePolicy(policy);
      }
      final byte[] proxyData=LdapUtils.getBinary(entry,this.serviceProxyPolicyAttribute);
      if (proxyData != null && proxyData.length > 0) {
        final RegisteredServiceProxyPolicy policy=(RegisteredServiceProxyPolicy)SerializationUtils.deserialize(proxyData);
        s.setProxyPolicy(policy);
      }
    }
    return s;
  }
  return null;
}
