{
  final String proxyGrantingTicket=request.getParameter(CasProtocolConstants.PARAMETER_PROXY_GRANTINOG_TICKET);
  final Service targetService=getTargetService(request);
  if (!StringUtils.hasText(proxyGrantingTicket) || targetService == null) {
    return generateErrorView(CasProtocolConstants.ERROR_CODE_INVALID_REQUEST,CasProtocolConstants.ERROR_CODE_INVALID_REQUEST_PROXY,null,request);
  }
  try {
    final ProxyTicket proxyTicket=this.centralAuthenticationService.grantProxyTicket(proxyGrantingTicket,targetService);
    return new ModelAndView(CONST_PROXY_SUCCESS,MODEL_SERVICE_TICKET,proxyTicket);
  }
 catch (  final AbstractTicketException e) {
    return generateErrorView(e.getCode(),e.getCode(),new Object[]{proxyGrantingTicket},request);
  }
catch (  final UnauthorizedServiceException e) {
    return generateErrorView(CasProtocolConstants.ERROR_CODE_UNAUTHORIZED_SERVICE,CasProtocolConstants.ERROR_CODE_UNAUTHORIZED_SERVICE_PROXY,new Object[]{targetService},request);
  }
}
