{
  final RegisteredServiceThemeBasedViewResolver r=new RegisteredServiceThemeBasedViewResolver();
  r.setApplicationContext(this.thymeleafViewResolver.getApplicationContext());
  r.setCache(this.thymeleafProperties.isCache());
  if (!r.isCache()) {
    r.setCacheLimit(0);
  }
  r.setCacheUnresolved(this.thymeleafViewResolver.isCacheUnresolved());
  r.setCharacterEncoding(this.thymeleafViewResolver.getCharacterEncoding());
  r.setContentType(this.thymeleafViewResolver.getContentType());
  r.setExcludedViewNames(this.thymeleafViewResolver.getExcludedViewNames());
  r.setOrder(this.thymeleafViewResolver.getOrder());
  r.setRedirectContextRelative(this.thymeleafViewResolver.isRedirectContextRelative());
  r.setRedirectHttp10Compatible(this.thymeleafViewResolver.isRedirectHttp10Compatible());
  r.setStaticVariables(this.thymeleafViewResolver.getStaticVariables());
  final SpringTemplateEngine engine=SpringTemplateEngine.class.cast(this.thymeleafViewResolver.getTemplateEngine());
  if (!engine.isInitialized()) {
  }
  r.setTemplateEngine(engine);
  r.setViewNames(this.thymeleafViewResolver.getViewNames());
  r.setServicesManager(this.servicesManager);
  r.setArgumentExtractors(this.argumentExtractors);
  r.setPrefix(this.thymeleafProperties.getPrefix());
  r.setSuffix(this.thymeleafProperties.getSuffix());
  return r;
}
