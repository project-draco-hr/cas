{
  final DateTime currentDateTime=DateTime.parse(new ISOStandardDateFormat().getCurrentDateAndTime());
  final DateTime notBeforeIssueInstant=DateTime.parse("2003-04-17T00:46:02Z");
  final ApplicationContext context=ApplicationContextProvider.getApplicationContext();
  final ServicesManager servicesManager=context.getBean("servicesManager",ServicesManager.class);
  final RegisteredService registeredService=servicesManager.findServiceBy(service);
  final String userId=registeredService.getUsernameAttributeProvider().resolveUsername(service.getPrincipal(),service);
  final org.opensaml.saml.saml2.core.Response response=samlObjectBuilder.newResponse(samlObjectBuilder.generateSecureRandomId(),currentDateTime,service.getId(),service);
  response.setStatus(samlObjectBuilder.newStatus(StatusCode.SUCCESS,null));
  final AuthnStatement authnStatement=samlObjectBuilder.newAuthnStatement(AuthnContext.PASSWORD_AUTHN_CTX,currentDateTime);
  final Assertion assertion=samlObjectBuilder.newAssertion(authnStatement,"https://www.opensaml.org/IDP",notBeforeIssueInstant,samlObjectBuilder.generateSecureRandomId());
  final Conditions conditions=samlObjectBuilder.newConditions(notBeforeIssueInstant,currentDateTime,service.getId());
  assertion.setConditions(conditions);
  final Subject subject=samlObjectBuilder.newSubject(NameID.EMAIL,userId,service.getId(),currentDateTime,service.getRequestId());
  assertion.setSubject(subject);
  response.getAssertions().add(assertion);
  final StringWriter writer=new StringWriter();
  samlObjectBuilder.marshalSamlXmlObject(response,writer);
  final String result=writer.toString();
  logger.debug("Generated Google SAML response: {}",result);
  return result;
}
