{
  final MockHttpServletRequest mockRequest=new MockHttpServletRequest();
  mockRequest.setParameter(ProvidersDefinition.DEFAULT_PROVIDER_TYPE_PARAMETER,"FacebookProvider");
  final MockHttpSession mockSession=new MockHttpSession();
  mockSession.setAttribute(OAuthConstants.THEME,MY_THEME);
  mockSession.setAttribute(OAuthConstants.LOCALE,MY_LOCALE);
  mockSession.setAttribute(OAuthConstants.METHOD,MY_METHOD);
  final Service service=new SimpleWebApplicationServiceImpl(MY_SERVICE);
  mockSession.setAttribute(OAuthConstants.SERVICE,service);
  mockRequest.setSession(mockSession);
  final ServletExternalContext servletExternalContext=mock(ServletExternalContext.class);
  when(servletExternalContext.getNativeRequest()).thenReturn(mockRequest);
  final MockRequestContext mockRequestContext=new MockRequestContext();
  mockRequestContext.setExternalContext(servletExternalContext);
  final OAuthAction oAuthAction=new OAuthAction(mock(CentralAuthenticationService.class),newProvidersDefinition());
  final Event event=oAuthAction.execute(mockRequestContext);
  assertEquals("success",event.getId());
  assertEquals(MY_THEME,mockRequest.getAttribute(OAuthConstants.THEME));
  assertEquals(MY_LOCALE,mockRequest.getAttribute(OAuthConstants.LOCALE));
  assertEquals(MY_METHOD,mockRequest.getAttribute(OAuthConstants.METHOD));
  final MutableAttributeMap flowScope=mockRequestContext.getFlowScope();
  assertEquals(service,flowScope.get(OAuthConstants.SERVICE));
}
