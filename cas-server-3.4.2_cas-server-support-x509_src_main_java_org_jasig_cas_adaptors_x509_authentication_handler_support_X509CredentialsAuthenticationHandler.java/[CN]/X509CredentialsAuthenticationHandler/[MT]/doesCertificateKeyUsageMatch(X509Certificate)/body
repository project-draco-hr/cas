{
  final String extensionOID="2.5.29.15";
  final boolean keyUsage[]=certificate.getKeyUsage();
  if (keyUsage == null) {
    log.warn("isKeyUsageRequired?: " + this.requireKeyUsage + "; keyUsage not found.");
    return !this.requireKeyUsage;
  }
  log.debug("keyUsage extension found: examing...");
  if (!isExtensionMarkedCritical(certificate,extensionOID) && !this.requireKeyUsage) {
    log.debug("match ok; keyUsage extension not critical and not required so not checked");
    return true;
  }
  if (log.isDebugEnabled()) {
    log.debug("extension is marked critical in cert OR required by config" + "[critical=" + isExtensionMarkedCritical(certificate,extensionOID) + ";required="+ this.requireKeyUsage+ "]");
  }
  if (keyUsage[0]) {
    log.debug("match ok; keyUsage extension OK");
    return true;
  }
  if (log.isWarnEnabled() && this.requireKeyUsage) {
    log.warn("match error; required/critical keyUsage extension fails" + "[critical=" + isExtensionMarkedCritical(certificate,extensionOID) + ";required="+ this.requireKeyUsage+ "]");
  }
  return false;
}
