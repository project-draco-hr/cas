{
  Assert.notNull(this.connectionFactory,"connectionFactory must not be null");
  Assert.notNull(this.userSearchExecutor,"userSearchExecutor must not be null");
  final String username=profile.getId();
  final SearchResult userResult;
  try {
    logger.debug("Attempting to get details for user {}.",username);
    final Response<SearchResult> response=this.userSearchExecutor.search(this.connectionFactory,createSearchFilter(this.userSearchExecutor,username));
    logger.debug("LDAP user search response: {}",response);
    userResult=response.getResult();
    if (userResult.size() == 0) {
      throw new AccountNotFoundException(username + " not found.");
    }
    if (userResult.size() > 1 && !this.allowMultipleResults) {
      throw new IllegalStateException("Found multiple results for user which is not allowed (allowMultipleResults=false).");
    }
    if (userResult.getEntry().getAttributes().isEmpty()) {
      throw new IllegalStateException("No attributes are retrieved for this user.");
    }
    final LdapAttribute attribute=userResult.getEntry().getAttribute(this.roleAttribute);
    if (attribute == null) {
      throw new IllegalStateException("Configured role attribute cannot be found for this user");
    }
    addProfileRolesFromAttributes(profile,attribute);
  }
 catch (  final LdapException e) {
    throw new RuntimeException("LDAP error fetching details for user.",e);
  }
}
