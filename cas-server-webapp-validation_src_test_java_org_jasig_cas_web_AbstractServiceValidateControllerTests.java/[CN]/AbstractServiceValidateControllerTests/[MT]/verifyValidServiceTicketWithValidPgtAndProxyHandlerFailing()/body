{
  getAuthenticationTransactionManager().authenticate(org.jasig.cas.authentication.TestUtils.getCredentialsWithSameUsernameAndPassword());
  final AuthenticationContext ctx=getAuthenticationTransactionManager().build();
  final TicketGrantingTicket tId=getCentralAuthenticationService().createTicketGrantingTicket(ctx);
  final ServiceTicket sId=getCentralAuthenticationService().grantServiceTicket(tId.getId(),org.jasig.cas.authentication.TestUtils.getService(),ctx);
  final MockHttpServletRequest request=new MockHttpServletRequest();
  request.addParameter("service",org.jasig.cas.authentication.TestUtils.getService().getId());
  request.addParameter("ticket",sId.getId());
  request.addParameter("pgtUrl","https://www.github.com");
  this.serviceValidateController.setProxyHandler(new ProxyHandler(){
    @Override public String handle(    final Credential credential,    final TicketGrantingTicket proxyGrantingTicketId){
      return null;
    }
    @Override public boolean canHandle(    final Credential credential){
      return true;
    }
  }
);
  final ModelAndView modelAndView=this.serviceValidateController.handleRequestInternal(request,new MockHttpServletResponse());
  assertEquals(AbstractServiceValidateController.DEFAULT_SERVICE_FAILURE_VIEW_NAME,modelAndView.getViewName());
  assertNull(modelAndView.getModel().get("pgtIou"));
}
