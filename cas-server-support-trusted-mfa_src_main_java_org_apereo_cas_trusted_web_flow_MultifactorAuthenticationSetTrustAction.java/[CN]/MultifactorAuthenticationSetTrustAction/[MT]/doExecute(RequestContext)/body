{
  final Authentication c=WebUtils.getAuthentication(requestContext);
  if (c == null) {
    LOGGER.error("Could not determine authentication from the request context");
    return error();
  }
  CurrentCredentialsAndAuthentication.bindCurrent(c);
  final String principal=c.getPrincipal().getId();
  if (!requestContext.getFlashScope().contains(AbstractMultifactorTrustedDeviceWebflowConfigurer.MFA_TRUSTED_AUTHN_SCOPE_ATTR)) {
    LOGGER.debug("Attempt to store trusted authentication record for {}",principal);
    final MultifactorAuthenticationTrustRecord record=MultifactorAuthenticationTrustRecord.newInstance(principal,MultifactorAuthenticationTrustUtils.generateGeography());
    if (requestContext.getRequestParameters().contains(PARAM_NAME_DEVICE_NAME)) {
      final String deviceName=requestContext.getRequestParameters().get(PARAM_NAME_DEVICE_NAME);
      if (StringUtils.isNotBlank(deviceName)) {
        record.setName(deviceName);
      }
    }
    storage.set(record);
    LOGGER.debug("Saved trusted authentication record for {} under {}",principal,record.getName());
  }
  LOGGER.debug("Trusted authentication session exists for {}",principal);
  if (StringUtils.isNotBlank(mfaTrustedAuthnAttributeName) && !c.getAttributes().containsKey(mfaTrustedAuthnAttributeName)) {
    final Authentication newAuthn=DefaultAuthenticationBuilder.newInstance(c).addAttribute(this.mfaTrustedAuthnAttributeName,Boolean.TRUE).build();
    LOGGER.debug("Updated authentication session to remember trusted MFA record via {}",this.mfaTrustedAuthnAttributeName);
    c.update(newAuthn);
  }
  return success();
}
