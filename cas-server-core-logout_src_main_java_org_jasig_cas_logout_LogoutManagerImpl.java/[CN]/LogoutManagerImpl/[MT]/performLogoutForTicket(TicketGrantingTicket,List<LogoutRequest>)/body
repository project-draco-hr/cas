{
  final Map<String,Service> services=ticket.getServices();
  for (  final Map.Entry<String,Service> entry : services.entrySet()) {
    final Service service=entry.getValue();
    if (service instanceof SingleLogoutService) {
      LOGGER.debug("Handling single logout callback for {}",service);
      final LogoutRequest logoutRequest=this.singleLogoutServiceMessageHandler.handle((SingleLogoutService)service,entry.getKey());
      if (logoutRequest != null) {
        LOGGER.debug("Captured logout request [{}]",logoutRequest);
        logoutRequests.add(logoutRequest);
      }
    }
  }
  final Collection<ProxyGrantingTicket> proxyGrantingTickets=ticket.getProxyGrantingTickets();
  if (proxyGrantingTickets.isEmpty()) {
    LOGGER.info("There are no proxy-granting tickets associated with [{}] to process for single logout",ticket.getId());
  }
 else {
    for (    final ProxyGrantingTicket proxyGrantingTicket : proxyGrantingTickets) {
      performLogoutForTicket(proxyGrantingTicket,logoutRequests);
    }
  }
}
