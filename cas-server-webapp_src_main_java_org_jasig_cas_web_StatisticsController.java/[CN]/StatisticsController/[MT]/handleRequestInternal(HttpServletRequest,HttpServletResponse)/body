{
  final ModelAndView modelAndView=new ModelAndView("viewStatisticsView");
  modelAndView.addObject("startTime",this.upTimeStartDate);
  final double difference=System.currentTimeMillis() - this.upTimeStartDate.getTime();
  modelAndView.addObject("upTime",calculateUptime(difference,new LinkedList<Integer>(Arrays.asList(NUMBER_OF_MILLISECONDS_IN_A_DAY,NUMBER_OF_MILLISECONDS_IN_AN_HOUR,NUMBER_OF_MILLISECONDS_IN_A_MINUTE,NUMBER_OF_MILLISECONDS_IN_A_SECOND,1)),new LinkedList<String>(Arrays.asList("day","hour","minute","second","millisecond"))));
  modelAndView.addObject("totalMemory",Runtime.getRuntime().totalMemory() / 1024 / 1024);
  modelAndView.addObject("maxMemory",Runtime.getRuntime().maxMemory() / 1024 / 1024);
  modelAndView.addObject("freeMemory",Runtime.getRuntime().freeMemory() / 1024 / 1024);
  modelAndView.addObject("availableProcessors",Runtime.getRuntime().availableProcessors());
  modelAndView.addObject("serverHostName",httpServletRequest.getServerName());
  modelAndView.addObject("serverIpAddress",httpServletRequest.getLocalAddr());
  modelAndView.addObject("casTicketSuffix",this.casTicketSuffix);
  int unexpiredTgts=0;
  int unexpiredSts=0;
  int expiredTgts=0;
  int expiredSts=0;
  try {
    final Collection<Ticket> tickets=this.ticketRegistry.getTickets();
    for (    final Ticket ticket : tickets) {
      if (ticket instanceof ServiceTicket) {
        if (ticket.isExpired()) {
          expiredSts++;
        }
 else {
          unexpiredSts++;
        }
      }
 else {
        if (ticket.isExpired()) {
          expiredTgts++;
        }
 else {
          unexpiredTgts++;
        }
      }
    }
  }
 catch (  final UnsupportedOperationException e) {
    log.trace("The ticket registry doesn't support this information.");
  }
  final Collection<GraphingStatisticsAppender> appenders=GraphingStatisticsAppender.getAllGraphingStatisticsAppenders();
  modelAndView.addObject("unexpiredTgts",unexpiredTgts);
  modelAndView.addObject("unexpiredSts",unexpiredSts);
  modelAndView.addObject("expiredTgts",expiredTgts);
  modelAndView.addObject("expiredSts",expiredSts);
  modelAndView.addObject("pageTitle",modelAndView.getViewName());
  modelAndView.addObject("graphingStatisticAppenders",appenders);
  return modelAndView;
}
