{
  final MockHttpServletRequest mockRequest=new MockHttpServletRequest();
  mockRequest.setParameter(Clients.DEFAULT_CLIENT_NAME_PARAMETER,"BasicAuthClient");
  final ServletExternalContext servletExternalContext=mock(ServletExternalContext.class);
  when(servletExternalContext.getNativeRequest()).thenReturn(mockRequest);
  final MockRequestContext mockRequestContext=new MockRequestContext();
  mockRequestContext.setExternalContext(servletExternalContext);
  final BasicAuthClient basicAuthClient=new BasicAuthClient();
  final Clients clients=new Clients(MY_LOGIN_URL,basicAuthClient);
  final ClientAction action=new ClientAction(mock(CentralAuthenticationService.class),clients);
  try {
    action.execute(mockRequestContext);
    fail("Should fail as the HTTP protocol is not authorized");
  }
 catch (  final TechnicalException e) {
    assertEquals("Only CAS, OAuth, OpenID and SAML protocols are supported: " + basicAuthClient,e.getMessage());
  }
}
