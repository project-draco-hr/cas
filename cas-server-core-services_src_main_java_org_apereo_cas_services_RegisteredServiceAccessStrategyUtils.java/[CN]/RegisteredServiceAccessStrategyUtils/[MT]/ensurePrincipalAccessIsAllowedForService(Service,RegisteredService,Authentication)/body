{
  ensureServiceAccessIsAllowed(service,registeredService);
  final Principal principal=authentication.getPrincipal();
  final Map<String,Object> principalAttrs=registeredService.getAttributeReleasePolicy().getAttributes(principal);
  if (!registeredService.getAccessStrategy().doPrincipalAttributesAllowServiceAccess(principal.getId(),principalAttrs)) {
    LOGGER.warn("Cannot grant access to service [{}] because it is not authorized for use by [{}].",service.getId(),principal);
    final Map<String,Class<? extends Exception>> handlerErrors=new HashMap<>();
    handlerErrors.put(UnauthorizedServiceForPrincipalException.class.getSimpleName(),UnauthorizedServiceForPrincipalException.class);
    throw new PrincipalException(UnauthorizedServiceForPrincipalException.CODE_UNAUTHZ_SERVICE,handlerErrors,new HashMap());
  }
}
