{
  final String ticketGrantingTicketId=WebUtils.getTicketGrantingTicketId(context);
  final String ticketGrantingTicketValueFromCookie=(String)context.getFlowScope().get("ticketGrantingTicketId");
  if (ticketGrantingTicketId == null) {
    return success();
  }
  if (!this.createSsoSessionCookieOnRenewAuthentications && isAuthenticationRenewed(context)) {
    LOGGER.info("Authentication session is renewed but CAS is not configured to create the SSO session. " + "SSO cookie will not be generated. Subsequent requests will be challenged for authentication.");
  }
 else {
    this.ticketGrantingTicketCookieGenerator.addCookie(WebUtils.getHttpServletRequest(context),WebUtils.getHttpServletResponse(context),ticketGrantingTicketId);
  }
  if (ticketGrantingTicketValueFromCookie != null && !ticketGrantingTicketId.equals(ticketGrantingTicketValueFromCookie)) {
    this.centralAuthenticationService.destroyTicketGrantingTicket(ticketGrantingTicketValueFromCookie);
  }
  return success();
}
