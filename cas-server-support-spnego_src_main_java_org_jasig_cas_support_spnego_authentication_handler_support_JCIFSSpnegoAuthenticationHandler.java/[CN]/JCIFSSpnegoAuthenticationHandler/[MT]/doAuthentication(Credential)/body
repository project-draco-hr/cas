{
  final SpnegoCredential spnegoCredential=(SpnegoCredential)credential;
  java.security.Principal principal;
  byte[] nextToken;
  if (!this.isNTLMallowed && spnegoCredential.isNtlm()) {
    throw new FailedLoginException("NTLM not allowed");
  }
  try {
synchronized (this) {
      this.authentication.reset();
      this.authentication.process(spnegoCredential.getInitToken());
      principal=this.authentication.getPrincipal();
      nextToken=this.authentication.getNextToken();
    }
  }
 catch (  final jcifs.spnego.AuthenticationException e) {
    throw new FailedLoginException(e.getMessage());
  }
  if (nextToken != null) {
    logger.debug("Setting nextToken in credential");
    spnegoCredential.setNextToken(nextToken);
  }
 else {
    logger.debug("nextToken is null");
  }
  boolean success=false;
  if (principal != null) {
    if (spnegoCredential.isNtlm()) {
      logger.debug("NTLM Credential is valid for user [{}]",principal.getName());
      spnegoCredential.setPrincipal(getPrincipal(principal.getName(),true));
      success=true;
    }
    logger.debug("Kerberos Credential is valid for user [{}]",principal.getName());
    spnegoCredential.setPrincipal(getPrincipal(principal.getName(),false));
    success=true;
  }
  if (!success) {
    throw new FailedLoginException("Principal is null, the processing of the SPNEGO Token failed");
  }
  return new DefaultHandlerResult(this,new BasicCredentialMetaData(credential),spnegoCredential.getPrincipal());
}
