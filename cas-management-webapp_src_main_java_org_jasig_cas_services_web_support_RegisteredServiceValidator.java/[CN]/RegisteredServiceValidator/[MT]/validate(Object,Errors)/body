{
  final RegisteredService r=(RegisteredService)o;
  if (r.getServiceId() != null) {
    for (    final RegisteredService service : this.servicesManager.getAllServices()) {
      if (r.getServiceId().equals(service.getServiceId()) && r.getId() != service.getId()) {
        errors.rejectValue("serviceId","registeredService.serviceId.exists",null);
        break;
      }
    }
  }
  if (r.getDescription() != null && r.getDescription().length() > this.maxDescriptionLength) {
    errors.rejectValue("description","registeredService.description.length",null);
  }
  if (!StringUtils.isBlank(r.getUsernameAttribute()) && !r.isAnonymousAccess()) {
    final Set<String> availableAttributes=this.personAttributeDao.getPossibleUserAttributeNames();
    if (availableAttributes != null) {
      if (!availableAttributes.contains(r.getUsernameAttribute())) {
        errors.rejectValue("usernameAttribute","registeredService.usernameAttribute.notAvailable","This attribute is not available from configured user attribute sources.");
      }
    }
  }
}
