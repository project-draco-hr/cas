{
  Assert.notNull(this.httpClient);
  HttpEntity entity=null;
  try (final CloseableHttpResponse response=this.httpClient.execute(new HttpGet(url.toURI()))){
    final int responseCode=response.getStatusLine().getStatusCode();
    for (    final int acceptableCode : this.acceptableCodes) {
      if (responseCode == acceptableCode) {
        LOGGER.debug("Response code received from server matched {}.",responseCode);
        entity=response.getEntity();
        final HttpMessage msg=new HttpMessage(url,IOUtils.toString(entity.getContent()));
        msg.setContentType(entity.getContentType().getValue());
        msg.setResponseCode(responseCode);
        return msg;
      }
    }
    LOGGER.debug("Response code did not match any of the acceptable response codes. Code returned {}",responseCode);
    if (responseCode == HttpStatus.SC_INTERNAL_SERVER_ERROR) {
      final String value=response.getStatusLine().getReasonPhrase();
      LOGGER.error("There was an error contacting the endpoint: {}; The error:\n{}",url.toExternalForm(),value);
    }
  }
 catch (  final Exception e) {
    LOGGER.error(e.getMessage(),e);
  }
 finally {
    EntityUtils.consumeQuietly(entity);
  }
  return null;
}
