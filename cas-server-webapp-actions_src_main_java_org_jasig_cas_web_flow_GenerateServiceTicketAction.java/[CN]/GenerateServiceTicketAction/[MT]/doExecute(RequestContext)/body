{
  final Service service=WebUtils.getService(context);
  final String ticketGrantingTicket=WebUtils.getTicketGrantingTicketId(context);
  try {
    final Authentication authentication=ticketRegistrySupport.getAuthenticationFrom(ticketGrantingTicket);
    if (authentication == null) {
      throw new InvalidTicketException(new AuthenticationException("No authentication found for ticket " + ticketGrantingTicket),ticketGrantingTicket);
    }
    final AuthenticationResultBuilder authenticationResultBuilder=authenticationSystemSupport.establishAuthenticationContextFromInitial(authentication);
    final AuthenticationResult authenticationResult=authenticationResultBuilder.build(service);
    final ServiceTicket serviceTicketId=this.centralAuthenticationService.grantServiceTicket(ticketGrantingTicket,service,authenticationResult);
    WebUtils.putServiceTicketInRequestScope(context,serviceTicketId);
    return success();
  }
 catch (  final AuthenticationException e) {
    logger.error("Could not verify credentials to grant service ticket",e);
  }
catch (  final AbstractTicketException e) {
    if (e instanceof InvalidTicketException) {
      this.centralAuthenticationService.destroyTicketGrantingTicket(ticketGrantingTicket);
    }
    if (isGatewayPresent(context)) {
      return result("gateway");
    }
    return newEvent(AbstractCasWebflowConfigurer.EVENT_AUTHENTICATION_FAILURE,e);
  }
  return error();
}
