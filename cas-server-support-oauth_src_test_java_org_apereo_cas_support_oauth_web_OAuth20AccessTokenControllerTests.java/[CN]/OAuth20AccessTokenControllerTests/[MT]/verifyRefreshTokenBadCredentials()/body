{
  final Principal principal=createPrincipal();
  final RegisteredService service=addRegisteredService();
  final RefreshToken refreshToken=addRefreshToken(principal,service);
  final MockHttpServletRequest mockRequest=new MockHttpServletRequest("GET",CONTEXT + OAuthConstants.ACCESS_TOKEN_URL);
  mockRequest.setParameter(OAuthConstants.GRANT_TYPE,OAuthGrantType.REFRESH_TOKEN.name().toLowerCase());
  mockRequest.setParameter(OAuthConstants.CLIENT_ID,CLIENT_ID);
  mockRequest.setParameter(OAuthConstants.CLIENT_SECRET,WRONG_CLIENT_SECRET);
  mockRequest.setParameter(OAuthConstants.REFRESH_TOKEN,refreshToken.getId());
  final MockHttpServletResponse mockResponse=new MockHttpServletResponse();
  requiresAuthenticationInterceptor.preHandle(mockRequest,mockResponse,null);
  oAuth20AccessTokenController.handleRequestInternal(mockRequest,mockResponse);
  assertEquals(HttpStatus.SC_UNAUTHORIZED,mockResponse.getStatus());
  assertEquals("error=" + OAuthConstants.INVALID_REQUEST,mockResponse.getContentAsString());
}
