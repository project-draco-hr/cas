{
  log.debug("Checking account status for password...");
  final String ticket=context.getRequestScope().getString("serviceTicketId");
  final UsernamePasswordCredentials credentials=(UsernamePasswordCredentials)context.getFlowScope().get("credentials");
  final String userId=credentials.getUsername();
  Event returnedEvent=error();
  String msgToLog=null;
  try {
    if (userId == null && ticket == null) {
      msgToLog="No user principal or service ticket available.";
      log.error(msgToLog);
      throw new LdapPasswordPolicyEnforcementException(BadCredentialsAuthenticationException.CODE,msgToLog);
    }
    if (userId == null && ticket != null) {
      returnedEvent=success();
      log.debug("Received service ticket {} but no user id. Skipping password enforcement.",ticket);
    }
 else {
      log.debug("Retrieving number of days to password expiration date for user {}",userId);
      final long daysToExpirationDate=getPasswordPolicyEnforcer().getNumberOfDaysToPasswordExpirationDate(userId);
      if (daysToExpirationDate == -1) {
        returnedEvent=success();
        log.debug("Password for {} is not expiring",userId);
      }
 else {
        returnedEvent=warning();
        log.debug("Password for {} is expiring in {} days",userId,daysToExpirationDate);
        context.getFlowScope().put("expireDays",daysToExpirationDate);
        context.getFlowScope().put("redirectTimeout",this.redirectTimeout);
      }
    }
  }
 catch (  final LdapAuthenticationException e) {
    log.error(e.getMessage(),e);
    populateErrorsInstance(e,context);
    returnedEvent=error();
  }
 finally {
    log.debug("Switching to flow event id {} for user {}",returnedEvent.getId(),userId);
  }
  return returnedEvent;
}
