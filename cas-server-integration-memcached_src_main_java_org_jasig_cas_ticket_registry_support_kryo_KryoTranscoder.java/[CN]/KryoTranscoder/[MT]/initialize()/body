{
  kryo.register(ArrayList.class);
  kryo.register(BasicCredentialMetaData.class);
  kryo.register(Class.class,new DefaultSerializers.ClassSerializer());
  kryo.register(Date.class,new DefaultSerializers.DateSerializer());
  kryo.register(HardTimeoutExpirationPolicy.class);
  kryo.register(HashMap.class);
  kryo.register(DefaultHandlerResult.class);
  kryo.register(ImmutableAuthentication.class);
  kryo.register(MultiTimeUseOrTimeoutExpirationPolicy.class);
  kryo.register(NeverExpiresExpirationPolicy.class);
  kryo.register(RememberMeDelegatingExpirationPolicy.class);
  kryo.register(ServiceTicketImpl.class);
  kryo.register(SimpleWebApplicationServiceImpl.class,new SimpleWebApplicationServiceSerializer());
  kryo.register(ThrottledUseAndTimeoutExpirationPolicy.class);
  kryo.register(TicketGrantingTicketExpirationPolicy.class);
  kryo.register(TicketGrantingTicketImpl.class);
  kryo.register(TimeoutExpirationPolicy.class);
  kryo.register(URL.class,new URLSerializer());
  kryo.register(URI.class,new URISerializer());
  kryo.register(Pattern.class,new RegexSerializer());
  kryo.register(UUID.class,new UUIDSerializer());
  kryo.register(EnumMap.class,new EnumMapSerializer());
  kryo.register(EnumSet.class,new EnumSetSerializer());
  kryo.register(RegisteredServiceImpl.class,new RegisteredServiceSerializer());
  kryo.register(RegexRegisteredService.class,new RegisteredServiceSerializer());
  kryo.register(DateTime.class,new JodaDateTimeSerializer());
  kryo.register(CasDelegatingLogger.class,new DefaultSerializers.VoidSerializer());
  UnmodifiableCollectionsSerializer.registerSerializers(kryo);
  ImmutableListSerializer.registerSerializers(kryo);
  ImmutableSetSerializer.registerSerializers(kryo);
  ImmutableMapSerializer.registerSerializers(kryo);
  ImmutableMultimapSerializer.registerSerializers(kryo);
  if (serializerMap != null) {
    for (    final Map.Entry<Class<?>,Serializer> clazz : serializerMap.entrySet()) {
      kryo.register(clazz.getKey(),clazz.getValue());
    }
  }
  kryo.setAutoReset(false);
  kryo.setReferences(false);
  kryo.setRegistrationRequired(false);
}
