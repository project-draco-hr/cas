{
  final SubflowState subflowState=createSubflowState(flow,subflowId,subflowId);
  final List<DefaultMapping> mappings=new ArrayList<>();
  final Mapper inputMapper=createMapperToSubflowState(mappings);
  final SubflowAttributeMapper subflowMapper=createSubflowAttributeMapper(inputMapper,null);
  subflowState.setAttributeMapper(subflowMapper);
  subflowState.getTransitionSet().add(createTransition(CasWebflowConstants.TRANSITION_ID_SUCCESS,CasWebflowConstants.TRANSITION_ID_SEND_TICKET_GRANTING_TICKET));
  final ActionState actionState=(ActionState)flow.getState(CasWebflowConstants.TRANSITION_ID_REAL_SUBMIT);
  logger.debug("Retrieved action state {}",actionState.getId());
  createTransitionForState(actionState,subflowId,subflowId);
  registerFlowDefinitionIntoLoginFlowRegistry(registry);
  final TransitionableState state=flow.getTransitionableState(CasWebflowConstants.TRANSITION_ID_INITIAL_AUTHN_REQUEST_VALIDATION_CHECK);
  createTransitionForState(state,subflowId,subflowId);
}
