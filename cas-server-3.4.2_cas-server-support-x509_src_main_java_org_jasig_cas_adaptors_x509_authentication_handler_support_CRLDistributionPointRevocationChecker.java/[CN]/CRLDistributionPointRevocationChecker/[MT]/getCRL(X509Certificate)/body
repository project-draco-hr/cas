{
  final URL[] urls=getDistributionPoints(cert);
  if (this.logger.isDebugEnabled()) {
    this.logger.debug(String.format("Distribution points for %s: %s.",CertUtils.toString(cert),Arrays.asList(urls)));
  }
  Element item;
  for (  URL url : urls) {
    item=this.crlCache.get(url);
    if (item != null) {
      if (this.logger.isDebugEnabled()) {
        this.logger.debug("Found CRL in cache for " + CertUtils.toString(cert));
      }
      return (X509CRL)item.getObjectValue();
    }
  }
  X509CRL crl=null;
  for (int i=0; i < urls.length && crl == null; i++) {
    this.logger.info("Attempting to fetch CRL at " + urls[i]);
    try {
      crl=CertUtils.fetchCRL(new UrlResource(urls[i]));
      this.logger.info("Success. Caching fetched CRL.");
      this.crlCache.put(new Element(urls[i],crl));
    }
 catch (    Exception e) {
      this.logger.error("Error fetching CRL at " + urls[i],e);
    }
  }
  return crl;
}
