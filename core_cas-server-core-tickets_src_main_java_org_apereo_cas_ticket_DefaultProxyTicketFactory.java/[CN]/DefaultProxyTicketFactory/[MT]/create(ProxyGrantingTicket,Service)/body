{
  final String uniqueTicketIdGenKey=service.getClass().getName();
  logger.debug("Looking up ticket id generator for [{}]",uniqueTicketIdGenKey);
  UniqueTicketIdGenerator generator=this.uniqueTicketIdGeneratorsForService.get(uniqueTicketIdGenKey);
  if (generator == null) {
    generator=this.defaultTicketIdGenerator;
    logger.debug("Ticket id generator not found for [{}]. Using the default generator...",uniqueTicketIdGenKey);
  }
  String ticketId=generator.getNewTicketId(ProxyTicket.PROXY_TICKET_PREFIX);
  if (this.cipherExecutor != null) {
    logger.debug("Attempting to encode proxy ticket {}",ticketId);
    ticketId=this.cipherExecutor.encode(ticketId);
    logger.debug("Encoded proxy ticket id {}",ticketId);
  }
  final ProxyTicket serviceTicket=proxyGrantingTicket.grantProxyTicket(ticketId,service,this.proxyTicketExpirationPolicy,casProperties.getTicket().getTgt().isOnlyTrackMostRecentSession());
  return (T)serviceTicket;
}
