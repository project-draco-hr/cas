{
  try {
    final MarshallerFactory marshallerFactory=XMLObjectProviderRegistrySupport.getMarshallerFactory();
    final Marshaller marshaller=marshallerFactory.getMarshaller(object);
    if (marshaller == null) {
      throw new IllegalArgumentException("Cannot obtain marshaller for object " + object.getElementQName());
    }
    final Element element=marshaller.marshall(object);
    element.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns",SAMLConstants.SAML20_NS);
    element.setAttributeNS("http://www.w3.org/2000/xmlns/","xmlns:xenc","http://www.w3.org/2001/04/xmlenc#");
    final TransformerFactory transFactory=TransformerFactory.newInstance();
    final Transformer transformer=transFactory.newTransformer();
    transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION,"yes");
    transformer.setOutputProperty(OutputKeys.INDENT,"yes");
    transformer.transform(new DOMSource(element),new StreamResult(writer));
    return writer.toString();
  }
 catch (  final Exception e) {
    throw new IllegalStateException("An error has occurred while marshalling SAML object to xml",e);
  }
}
