{
  this.readLock.lock();
  try {
    for (    final WatchEvent<?> event : key.pollEvents()) {
      if (event.count() <= 1) {
        final WatchEvent.Kind kind=event.kind();
        final WatchEvent<Path> ev=(WatchEvent<Path>)event;
        final Path filename=ev.context();
        final Path parent=(Path)key.watchable();
        final Path fullPath=parent.resolve(filename);
        final File file=fullPath.toFile();
        LOGGER.trace("Detected event [{}] on file [{}]. Loading change...",kind,file);
        if (kind.name().equals(ENTRY_CREATE.name()) && file.exists()) {
          handleCreateEvent(file);
        }
 else         if (kind.name().equals(ENTRY_DELETE.name())) {
          handleDeleteEvent();
        }
 else         if (kind.name().equals(ENTRY_MODIFY.name()) && file.exists()) {
          handleModifyEvent(file);
        }
      }
    }
  }
  finally {
    this.readLock.unlock();
  }
}
