{
  final PrincipalAttributesRepository repository=new CachingPrincipalAttributesRepository(this.dao,TimeUnit.MILLISECONDS,200);
  repository.setAttributes("uid1",Collections.<String,Object>singletonMap("address","final@example.com"));
  repository.setAttributes("uid2",Collections.<String,Object>singletonMap("address","final@example.com"));
  final DefaultPrincipalFactory factory1=new DefaultPrincipalFactory(repository);
  final DefaultPrincipalFactory factory2=new DefaultPrincipalFactory(repository);
  final Principal p1=factory1.createPrincipal("uid1");
  final Principal p2=factory2.createPrincipal("uid2");
  assertFalse(p1.getAttributes().containsKey("mail"));
  assertFalse(p2.getAttributes().containsKey("mail"));
  assertTrue(p1.getAttributes().containsKey("address"));
  assertTrue(p2.getAttributes().containsKey("address"));
  Thread.sleep(400);
  assertTrue(p1.getAttributes().containsKey("mail"));
  assertTrue(p2.getAttributes().containsKey("mail"));
  assertFalse(p1.getAttributes().containsKey("address"));
  assertFalse(p2.getAttributes().containsKey("address"));
  ((Closeable)repository).close();
}
