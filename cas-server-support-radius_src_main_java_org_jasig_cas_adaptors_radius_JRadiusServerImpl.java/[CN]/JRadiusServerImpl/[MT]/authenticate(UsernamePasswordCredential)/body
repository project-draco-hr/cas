{
  final RadiusClient radiusClient=getNewRadiusClient();
  final AttributeList attributeList=new AttributeList();
  attributeList.add(new Attr_UserName(usernamePasswordCredentials.getUsername()));
  attributeList.add(new Attr_UserPassword(usernamePasswordCredentials.getPassword()));
  final AccessRequest request=new AccessRequest(radiusClient,attributeList);
  try {
    final RadiusPacket response=radiusClient.authenticate(request,this.radiusAuthenticator,this.retries);
    if (response instanceof AccessAccept) {
      log.debug("Authentication request suceeded for host:" + this.inetAddress.getCanonicalHostName() + " and username "+ usernamePasswordCredentials.getUsername());
      return true;
    }
    log.debug("Authentication request failed for host:" + this.inetAddress.getCanonicalHostName() + " and username "+ usernamePasswordCredentials.getUsername());
    return false;
  }
 catch (  final UnknownAttributeException e) {
    throw new IllegalArgumentException("Passed an unknown attribute to RADIUS client: " + e.getMessage());
  }
catch (  final RadiusException e) {
    throw new IllegalStateException("Received response that puts RadiusClient into illegal state: " + e.getMessage());
  }
}
