{
  final Collection<Map<String,Object>> activeSessions=new ArrayList<>();
  final ISOStandardDateFormat dateFormat=new ISOStandardDateFormat();
  for (  final Ticket ticket : getNonExpiredTicketGrantingTickets()) {
    final TicketGrantingTicket tgt=(TicketGrantingTicket)ticket;
    if (option == SsoSessionReportOptions.DIRECT && tgt.getProxiedBy() != null) {
      continue;
    }
    final Authentication authentication=tgt.getAuthentication();
    final Principal principal=authentication.getPrincipal();
    final Map<String,Object> sso=new HashMap<>(SsoSessionAttributeKeys.values().length);
    sso.put(SsoSessionAttributeKeys.AUTHENTICATED_PRINCIPAL.toString(),principal.getId());
    sso.put(SsoSessionAttributeKeys.AUTHENTICATION_DATE.toString(),authentication.getAuthenticationDate());
    sso.put(SsoSessionAttributeKeys.AUTHENTICATION_DATE_FORMATTED.toString(),dateFormat.format(DateTimeUtils.dateOf(authentication.getAuthenticationDate())));
    sso.put(SsoSessionAttributeKeys.NUMBER_OF_USES.toString(),tgt.getCountOfUses());
    sso.put(SsoSessionAttributeKeys.TICKET_GRANTING_TICKET.toString(),tgt.getId());
    sso.put(SsoSessionAttributeKeys.PRINCIPAL_ATTRIBUTES.toString(),principal.getAttributes());
    sso.put(SsoSessionAttributeKeys.AUTHENTICATION_ATTRIBUTES.toString(),authentication.getAttributes());
    if (option != SsoSessionReportOptions.DIRECT) {
      if (tgt.getProxiedBy() != null) {
        sso.put(SsoSessionAttributeKeys.IS_PROXIED.toString(),Boolean.TRUE);
        sso.put(SsoSessionAttributeKeys.PROXIED_BY.toString(),tgt.getProxiedBy().getId());
      }
 else {
        sso.put(SsoSessionAttributeKeys.IS_PROXIED.toString(),Boolean.FALSE);
      }
    }
    sso.put(SsoSessionAttributeKeys.AUTHENTICATED_SERVICES.toString(),tgt.getServices());
    activeSessions.add(sso);
  }
  return activeSessions;
}
