{
  logger.debug("Evaluating authentication policy for {} based on principal attribute requirements only when accessing {}",registeredService.getServiceId(),service);
  final Event serviceAttributeEvent=this.registeredServicePrincipalAttributeAuthenticationPolicyWebflowEventResolver.resolveSingle(context);
  logger.debug("Evaluating authentication policy based on principal attribute requirements for {}",service);
  final Event attributeEvent=this.principalAttributeAuthenticationPolicyWebflowEventResolver.resolveSingle(context);
  logger.debug("Evaluating authentication policy for {}",service);
  final Event serviceEvent=this.registeredServiceAuthenticationPolicyWebflowEventResolver.resolveSingle(context);
  logger.debug("Evaluating authentication policy for {} based on request parameters",service);
  final Event requestEvent=this.requestParameterAuthenticationPolicyWebflowEventResolver.resolveSingle(context);
  final ImmutableSet.Builder<Event> eventBuilder=ImmutableSet.builder();
  if (requestEvent != null) {
    eventBuilder.add(requestEvent);
  }
  if (serviceAttributeEvent != null) {
    eventBuilder.add(serviceAttributeEvent);
  }
  if (attributeEvent != null) {
    eventBuilder.add(attributeEvent);
  }
  if (serviceEvent != null) {
    eventBuilder.add(serviceEvent);
  }
  return eventBuilder.build();
}
