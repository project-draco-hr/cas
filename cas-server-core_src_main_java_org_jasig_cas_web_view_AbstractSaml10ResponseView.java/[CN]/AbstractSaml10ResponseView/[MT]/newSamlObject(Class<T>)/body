{
  final QName qName;
  try {
    final Field f=objectType.getField(DEFAULT_ELEMENT_NAME_FIELD);
    qName=(QName)f.get(null);
  }
 catch (  NoSuchFieldException e) {
    throw new IllegalStateException("Cannot find field " + objectType.getName() + "."+ DEFAULT_ELEMENT_NAME_FIELD);
  }
catch (  IllegalAccessException e) {
    throw new IllegalStateException("Cannot access field " + objectType.getName() + "."+ DEFAULT_ELEMENT_NAME_FIELD);
  }
  final SAMLObjectBuilder<T> builder=(SAMLObjectBuilder<T>)Configuration.getBuilderFactory().getBuilder(qName);
  if (builder == null) {
    throw new IllegalStateException("No SAMLObjectBuilder registered for class " + objectType.getName());
  }
  return objectType.cast(builder.buildObject());
}
