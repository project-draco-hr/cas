{
  final RegisteredService service=WebUtils.getRegisteredService(context);
  final Authentication authentication=WebUtils.getAuthentication(context);
  if (service == null || authentication == null) {
    logger.debug("No service or authentication is available to determine event for principal");
    return null;
  }
  final Principal principal=authentication.getPrincipal();
  if (StringUtils.isBlank(this.attributeName) || StringUtils.isBlank(this.attributeValue)) {
    logger.debug("Attribute name/value to determine event is not configured for {}",principal.getId());
    return null;
  }
  final Map<String,MultifactorAuthenticationProvider> providerMap=getAllMultifactorAuthenticationProvidersFromApplicationContext();
  if (providerMap == null || providerMap.isEmpty()) {
    logger.warn("No multifactor authentication providers are available in the application context");
    return null;
  }
  final Set<MultifactorAuthenticationProvider> providers=new LinkedHashSet<>(providerMap.size());
  for (  final MultifactorAuthenticationProvider provider : providerMap.values()) {
    try {
      if (provider.getId().matches(this.attributeValue)) {
        logger.debug("Matched provider {} against attribute value {}",provider,this.attributeValue);
        providers.add(provider);
      }
    }
 catch (    final Exception e) {
      logger.warn("Could not verify multifactor authentication provider {}",provider,e);
    }
  }
  return resolveEventViaPrincipalAttribute(principal,this.attributeName,service,context,providers,Predicates.alwaysTrue());
}
