{
  DirContext ctx=null;
  try {
    final String ldapURL=r.toString();
    logger.debug("Fetching CRL from ldap {}",ldapURL);
    final Map<String,String> env=configureLdapDirectoryContext(ldapURL);
    logger.debug("Establishing a connection to {}",ldapURL);
    ctx=new InitialDirContext((Hashtable)env);
    logger.debug("Connected to {}",ldapURL);
    if (StringUtils.isNotBlank(this.objectName)) {
      logger.debug("Retrieving object {}",this.objectName);
      ctx=(DirContext)ctx.lookup(this.objectName);
    }
    logger.debug("Retrieving certificate revocation list attribute {}",this.certificateRevocationListAttributeName);
    final Attributes attrs=ctx.getAttributes("");
    final Attribute aval=attrs.get(this.certificateRevocationListAttributeName);
    if (aval != null) {
      final byte[] val=(byte[])aval.get();
      if (val == null || val.length == 0) {
        throw new CertificateException("Empty attribute. Can not download CRL from: " + ldapURL);
      }
      final byte[] decoded64=CompressionUtils.decodeBase64ToByteArray(val);
      logger.debug("Retrieved CRL from ldap as byte array decoded in base64. Fetching...");
      return super.fetch(new ByteArrayResource(decoded64));
    }
    throw new CertificateException("Attribute not found. Can not retrieve CRL from attribute: " + this.certificateRevocationListAttributeName);
  }
 catch (  final AuthenticationException|OperationNotSupportedException e) {
    logger.error(e.getMessage(),e);
    throw new CertificateException(e);
  }
 finally {
    if (ctx != null) {
      ctx.close();
    }
  }
}
