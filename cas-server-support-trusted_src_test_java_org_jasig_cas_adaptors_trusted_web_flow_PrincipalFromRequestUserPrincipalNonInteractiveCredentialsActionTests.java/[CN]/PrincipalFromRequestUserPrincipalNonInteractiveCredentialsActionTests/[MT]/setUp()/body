{
  this.action=new PrincipalFromRequestUserPrincipalNonInteractiveCredentialsAction();
  this.action.setPrincipalFactory(new DefaultPrincipalFactory());
  final Map<String,UniqueTicketIdGenerator> idGenerators=new HashMap<>();
  idGenerators.put(SimpleWebApplicationServiceImpl.class.getName(),new DefaultUniqueTicketIdGenerator());
  final AuthenticationManager authenticationManager=new PolicyBasedAuthenticationManager(Collections.<AuthenticationHandler,PrincipalResolver>singletonMap(new PrincipalBearingCredentialsAuthenticationHandler(),new PrincipalBearingPrincipalResolver()));
  final CentralAuthenticationServiceImpl centralAuthenticationService=new CentralAuthenticationServiceImpl(new DefaultTicketRegistry(),authenticationManager,new DefaultUniqueTicketIdGenerator(),idGenerators,new NeverExpiresExpirationPolicy(),new NeverExpiresExpirationPolicy(),mock(ServicesManager.class),mock(LogoutManager.class));
  this.action.setCentralAuthenticationService(centralAuthenticationService);
}
