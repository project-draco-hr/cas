{
  this.action=new PrincipalFromRequestUserPrincipalNonInteractiveCredentialsAction();
  final CentralAuthenticationServiceImpl centralAuthenticationService=new CentralAuthenticationServiceImpl();
  centralAuthenticationService.setTicketRegistry(new DefaultTicketRegistry());
  final Map<String,UniqueTicketIdGenerator> idGenerators=new HashMap<String,UniqueTicketIdGenerator>();
  idGenerators.put(SimpleWebApplicationServiceImpl.class.getName(),new DefaultUniqueTicketIdGenerator());
  final AuthenticationManager authenticationManager=new PolicyBasedAuthenticationManager(Collections.<AuthenticationHandler,CredentialsToPrincipalResolver>singletonMap(new LegacyAuthenticationHandlerAdapter(new PrincipalBearingCredentialsAuthenticationHandler()),new PrincipalBearingCredentialsToPrincipalResolver()));
  centralAuthenticationService.setTicketGrantingTicketUniqueTicketIdGenerator(new DefaultUniqueTicketIdGenerator());
  centralAuthenticationService.setUniqueTicketIdGeneratorsForService(idGenerators);
  centralAuthenticationService.setServiceTicketExpirationPolicy(new NeverExpiresExpirationPolicy());
  centralAuthenticationService.setTicketGrantingTicketExpirationPolicy(new NeverExpiresExpirationPolicy());
  centralAuthenticationService.setAuthenticationManager(authenticationManager);
  this.action.setCentralAuthenticationService(centralAuthenticationService);
}
