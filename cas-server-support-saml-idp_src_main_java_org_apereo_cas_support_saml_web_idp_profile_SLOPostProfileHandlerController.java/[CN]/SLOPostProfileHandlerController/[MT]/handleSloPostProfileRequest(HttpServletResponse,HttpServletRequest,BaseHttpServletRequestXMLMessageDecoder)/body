{
  if (isSingleLogoutCallbacksDisabled()) {
    logger.info("Processing SAML IdP SLO requests is disabled");
    return;
  }
  final Pair<? extends SignableSAMLObject,MessageContext> pair=decodeRequest(request,decoder,LogoutRequest.class);
  final LogoutRequest logoutRequest=LogoutRequest.class.cast(pair.getFirst());
  final MessageContext ctx=pair.getSecond();
  if (isForceSignedLogoutRequests() && !SAMLBindingSupport.isMessageSigned(ctx)) {
    throw new SAMLException("Logout request is not signed but should be.");
  }
 else   if (SAMLBindingSupport.isMessageSigned(ctx)) {
    final MetadataResolver resolver=SamlIdPUtils.getMetadataResolverForAllSamlServices(this.servicesManager,SamlIdPUtils.getIssuerFromSamlRequest(logoutRequest),this.samlRegisteredServiceCachingMetadataResolver);
    this.samlObjectSigner.verifySamlProfileRequestIfNeeded(logoutRequest,resolver,request,ctx);
  }
  SamlUtils.logSamlObject(this.configBean,logoutRequest);
  response.sendRedirect(getLogoutUrl());
}
