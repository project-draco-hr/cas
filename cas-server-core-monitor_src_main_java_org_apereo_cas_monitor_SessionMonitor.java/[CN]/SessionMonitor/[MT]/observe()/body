{
  try {
    final long sessionCount=this.registryState.sessionCount();
    final long ticketCount=this.registryState.serviceTicketCount();
    if (sessionCount == Integer.MIN_VALUE || ticketCount == Integer.MIN_VALUE) {
      return new SessionStatus(StatusCode.UNKNOWN,String.format("Ticket registry %s reports unknown session and/or ticket counts.",this.registryState.getClass().getName()),sessionCount,ticketCount);
    }
    final StringBuilder msg=new StringBuilder();
    StatusCode code=StatusCode.OK;
    if (this.sessionCountWarnThreshold > -1 && sessionCount > this.sessionCountWarnThreshold) {
      code=StatusCode.WARN;
      msg.append(String.format("Session count (%s) is above threshold %s. ",sessionCount,this.sessionCountWarnThreshold));
    }
 else {
      msg.append(sessionCount).append(" sessions. ");
    }
    if (this.serviceTicketCountWarnThreshold > -1 && ticketCount > this.serviceTicketCountWarnThreshold) {
      code=StatusCode.WARN;
      msg.append(String.format("Service ticket count (%s) is above threshold %s.",ticketCount,this.serviceTicketCountWarnThreshold));
    }
 else {
      msg.append(ticketCount).append(" service tickets.");
    }
    return new SessionStatus(code,msg.toString(),sessionCount,ticketCount);
  }
 catch (  final Exception e) {
    return new SessionStatus(StatusCode.ERROR,e.getMessage());
  }
}
