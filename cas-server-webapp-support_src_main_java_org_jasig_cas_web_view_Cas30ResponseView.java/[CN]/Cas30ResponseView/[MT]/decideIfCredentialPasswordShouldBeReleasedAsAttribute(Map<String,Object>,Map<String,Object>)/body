{
  final String credential=super.getCredentialPasswordFromAuthentication(model);
  if (StringUtils.isNotBlank(credential)) {
    logger.debug("Obtained credential password as an authentication attribute");
    final Service service=super.getServiceFrom(model);
    final RegisteredService registeredService=this.servicesManager.findServiceBy(service);
    final Principal principal=super.getPrincipal(model);
    final Map<String,Object> principalAttrs=registeredService.getAttributeReleasePolicy().getAttributes(principal);
    if (principalAttrs.containsKey(CasViewConstants.MODEL_ATTRIBUTE_NAME_PRINCIPAL_CREDENTIAL)) {
      logger.debug("Obtained credential password is passed to the CAS payload under [{}]",CasViewConstants.MODEL_ATTRIBUTE_NAME_PRINCIPAL_CREDENTIAL);
      attributes.put(CasViewConstants.MODEL_ATTRIBUTE_NAME_PRINCIPAL_CREDENTIAL,Collections.singleton(credential));
    }
 else {
      logger.debug("Released principal attributes [{}] do not authorize the release of " + "credential password, because the attribute [{}] is missing from the attribute release policy",principalAttrs.keySet(),CasViewConstants.MODEL_ATTRIBUTE_NAME_PRINCIPAL_CREDENTIAL);
    }
  }
 else {
    logger.trace("Credential password is not cached and will not be made available to the response.");
  }
}
