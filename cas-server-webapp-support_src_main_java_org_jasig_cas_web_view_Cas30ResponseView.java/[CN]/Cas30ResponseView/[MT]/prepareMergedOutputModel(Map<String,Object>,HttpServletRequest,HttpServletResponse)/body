{
  super.prepareMergedOutputModel(model,request,response);
  final Service service=super.getServiceFrom(model);
  final RegisteredService registeredService=this.servicesManager.findServiceBy(service);
  final Map<String,Object> attributes=new HashMap<>(getPrincipalAttributesAsMultiValuedAttributes(model));
  attributes.put(CasProtocolConstants.VALIDATION_CAS_MODEL_ATTRIBUTE_NAME_AUTHENTICATION_DATE,Collections.singleton(getAuthenticationDate(model)));
  attributes.put(CasProtocolConstants.VALIDATION_CAS_MODEL_ATTRIBUTE_NAME_FROM_NEW_LOGIN,Collections.singleton(isAssertionBackedByNewLogin(model)));
  attributes.put(CasProtocolConstants.VALIDATION_REMEMBER_ME_ATTRIBUTE_NAME,Collections.singleton(isRememberMeAuthentication(model)));
  decideIfCredentialPasswordShouldBeReleasedAsAttribute(attributes,model,registeredService);
  decideIfProxyGrantingTicketShouldBeReleasedAsAttribute(attributes,model,registeredService);
  super.putIntoModel(model,CasProtocolConstants.VALIDATION_CAS_MODEL_ATTRIBUTE_NAME_ATTRIBUTES,this.casAttributeEncoder.encodeAttributes(attributes,getServiceFrom(model)));
}
