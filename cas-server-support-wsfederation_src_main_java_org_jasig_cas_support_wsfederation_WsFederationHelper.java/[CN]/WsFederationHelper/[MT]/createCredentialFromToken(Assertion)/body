{
  final DateTime retrievedOn=new DateTime().withZone(DateTimeZone.UTC);
  LOGGER.debug("Retrieved on {}",retrievedOn);
  final WsFederationCredential credential=new WsFederationCredential();
  credential.setRetrievedOn(retrievedOn);
  credential.setId(assertion.getID());
  credential.setIssuer(assertion.getIssuer());
  credential.setIssuedOn(assertion.getIssueInstant());
  final Conditions conditions=assertion.getConditions();
  if (conditions != null) {
    credential.setNotBefore(conditions.getNotBefore());
    credential.setNotOnOrAfter(conditions.getNotOnOrAfter());
    credential.setAudience(conditions.getAudienceRestrictionConditions().get(0).getAudiences().get(0).getUri());
  }
  if (!assertion.getAuthenticationStatements().isEmpty()) {
    credential.setAuthenticationMethod(assertion.getAuthenticationStatements().get(0).getAuthenticationMethod());
  }
  final HashMap<String,Object> attributes=new HashMap<String,Object>();
  for (  final Attribute item : assertion.getAttributeStatements().get(0).getAttributes()) {
    LOGGER.debug("Processed attribute: {}",item.getAttributeName());
    if (item.getAttributeValues().size() == 1) {
      attributes.put(item.getAttributeName(),((XSAny)item.getAttributeValues().get(0)).getTextContent());
    }
 else {
      final List<String> itemList=new ArrayList<String>();
      for (int i=0; i < item.getAttributeValues().size(); i++) {
        itemList.add(((XSAny)item.getAttributeValues().get(i)).getTextContent());
      }
      if (!itemList.isEmpty()) {
        attributes.put(item.getAttributeName(),itemList);
      }
    }
  }
  credential.setAttributes(attributes);
  LOGGER.debug("Credential: {}",credential);
  return credential;
}
