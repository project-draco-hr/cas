{
  if (assertion == null) {
    LOGGER.warn("No assertion was provided to validate signatures");
    return false;
  }
  boolean valid=false;
  if (assertion.getSignature() != null) {
    final SignaturePrevalidator validator=new SAMLSignatureProfileValidator();
    try {
      validator.validate(assertion.getSignature());
      final CriteriaSet criteriaSet=new CriteriaSet();
      criteriaSet.add(new UsageCriterion(UsageType.SIGNING));
      criteriaSet.add(new EntityRoleCriterion(IDPSSODescriptor.DEFAULT_ELEMENT_NAME));
      criteriaSet.add(new ProtocolCriterion(SAMLConstants.SAML20P_NS));
      criteriaSet.add(new EntityIdCriterion(wsFederationConfiguration.getIdentityProviderIdentifier()));
      try {
        final SignatureTrustEngine engine=buildSignatureTrustEngine(wsFederationConfiguration);
        valid=engine.validate(assertion.getSignature(),criteriaSet);
      }
 catch (      final SecurityException e) {
        LOGGER.warn(e.getMessage(),e);
      }
 finally {
        if (!valid) {
          LOGGER.warn("validateSignature: Signature doesn't match any signing credential.");
        }
      }
    }
 catch (    final SignatureException e) {
      LOGGER.warn("Failed to validate assertion signature",e);
    }
  }
  return valid;
}
