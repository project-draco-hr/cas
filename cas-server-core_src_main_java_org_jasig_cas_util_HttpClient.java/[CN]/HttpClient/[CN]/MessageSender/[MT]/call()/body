{
  HttpURLConnection connection=null;
  BufferedReader in=null;
  try {
    log.debug("Attempting to access {}",url);
    final URL logoutUrl=new URL(url);
    final String output="logoutRequest=" + URLEncoder.encode(message,"UTF-8");
    connection=(HttpURLConnection)logoutUrl.openConnection();
    connection.setDoInput(true);
    connection.setDoOutput(true);
    connection.setRequestMethod("POST");
    connection.setReadTimeout(this.readTimeout);
    connection.setConnectTimeout(this.connectionTimeout);
    connection.setInstanceFollowRedirects(this.followRedirects);
    connection.setRequestProperty("Content-Length",Integer.toString(output.getBytes().length));
    connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
    final DataOutputStream printout=new DataOutputStream(connection.getOutputStream());
    printout.writeBytes(output);
    printout.flush();
    printout.close();
    in=new BufferedReader(new InputStreamReader(connection.getInputStream()));
    boolean readInput=true;
    while (readInput) {
      readInput=StringUtils.isNotBlank(in.readLine());
    }
    log.debug("Finished sending message to {}",url);
    return true;
  }
 catch (  final SocketTimeoutException e) {
    log.warn("Socket Timeout Detected while attempting to send message to [{}]",url);
    return false;
  }
catch (  final Exception e) {
    log.warn("Error Sending message to url endpoint [{}]. Error is [{}]",url,e.getMessage());
    return false;
  }
 finally {
    IOUtils.closeQuietly(in);
    if (connection != null) {
      connection.disconnect();
    }
  }
}
