{
  try {
    final Map<EncodeHintType,Object> hintMap=new EnumMap<>(EncodeHintType.class);
    hintMap.put(EncodeHintType.CHARACTER_SET,StandardCharsets.UTF_8.name());
    hintMap.put(EncodeHintType.MARGIN,2);
    hintMap.put(EncodeHintType.ERROR_CORRECTION,ErrorCorrectionLevel.L);
    final QRCodeWriter qrCodeWriter=new QRCodeWriter();
    final BitMatrix byteMatrix=qrCodeWriter.encode(key,BarcodeFormat.QR_CODE,250,250,hintMap);
    final int width=byteMatrix.getWidth();
    final BufferedImage image=new BufferedImage(width,width,BufferedImage.TYPE_INT_RGB);
    image.createGraphics();
    final Graphics2D graphics=(Graphics2D)image.getGraphics();
    try {
      graphics.setColor(Color.WHITE);
      graphics.fillRect(0,0,width,width);
      graphics.setColor(Color.BLACK);
      for (int i=0; i < width; i++) {
        for (int j=0; j < width; j++) {
          if (byteMatrix.get(i,j)) {
            graphics.fillRect(i,j,1,1);
          }
        }
      }
    }
  finally {
      graphics.dispose();
    }
    ImageIO.write(image,"png",stream);
  }
 catch (  final Exception e) {
    throw Throwables.propagate(e);
  }
}
