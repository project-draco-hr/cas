{
  final String username=getPrincipalNameTransformer().transform(transformedCredential.getUsername());
  final String encodedPsw=this.getPasswordEncoder().encode(transformedCredential.getPassword());
  try {
    final Map<String,Object> values=getJdbcTemplate().queryForMap(this.sql,username);
    final String digestedPassword=digestEncodedPassword(encodedPsw,values);
    if (!values.get(this.passwordFieldName).equals(digestedPassword)) {
      throw new FailedLoginException("Password does not match value on record.");
    }
    return createHandlerResult(transformedCredential,new SimplePrincipal(username),null);
  }
 catch (  final IncorrectResultSizeDataAccessException e) {
    if (e.getActualSize() == 0) {
      throw new AccountNotFoundException(username + " not found with SQL query");
    }
 else {
      throw new FailedLoginException("Multiple records found for " + username);
    }
  }
catch (  final DataAccessException e) {
    throw new PreventedException("SQL exception while executing query for " + username,e);
  }
}
