{
  logger.debug("Attempting to resolve a principal...");
  String principalId=extractPrincipalId(credential);
  if (principalId == null) {
    logger.debug("Got null for extracted principal ID; returning null.");
    return null;
  }
  logger.debug("Creating SimplePrincipal for [{}]",principalId);
  final IPersonAttributes personAttributes=this.attributeRepository.getPerson(principalId);
  final Map<String,List<Object>> attributes;
  if (personAttributes == null) {
    attributes=null;
  }
 else {
    attributes=personAttributes.getAttributes();
  }
  if (attributes == null & !this.returnNullIfNoAttributes) {
    return this.principalFactory.createPrincipal(principalId);
  }
  if (attributes == null) {
    return null;
  }
  final Map<String,Object> convertedAttributes=new HashMap<String,Object>();
  for (  final String key : attributes.keySet()) {
    final List<Object> values=attributes.get(key);
    if (key.equalsIgnoreCase(this.principalAttributeName)) {
      if (values.isEmpty()) {
        logger.debug("{} is empty, using {} for principal",this.principalAttributeName,principalId);
      }
 else {
        principalId=values.get(0).toString();
        logger.debug("Found principal attribute value {}; removing {} from attribute map.",principalId,this.principalAttributeName);
      }
    }
 else {
      convertedAttributes.put(key,values.size() == 1 ? values.get(0) : values);
    }
  }
  return this.principalFactory.createPrincipal(principalId,convertedAttributes);
}
