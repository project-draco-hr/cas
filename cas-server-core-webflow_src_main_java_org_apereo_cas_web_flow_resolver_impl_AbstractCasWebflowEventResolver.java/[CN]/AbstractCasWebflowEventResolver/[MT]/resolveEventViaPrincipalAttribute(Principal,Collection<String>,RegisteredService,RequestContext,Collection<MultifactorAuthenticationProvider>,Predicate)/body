{
  if (providers == null || providers.isEmpty()) {
    logger.debug("No authentication provider is associated with this service");
    return null;
  }
  logger.debug("Locating principal attribute value for attribute(s): {}",attributeNames);
  for (  final String attributeName : attributeNames) {
    final Object attributeValue=principal.getAttributes().get(attributeName);
    if (attributeValue == null) {
      logger.debug("Attribute value for {} to determine event is not configured for {}",attributeName,principal.getId());
      continue;
    }
    logger.debug("Selecting a multifactor authentication provider out of {} for {} and service {}",providers,principal.getId(),service);
    final MultifactorAuthenticationProvider provider=this.multifactorAuthenticationProviderSelector.resolve(providers,service,principal);
    logger.debug("Located principal attribute value {} for {}",attributeValue,attributeNames);
    Set<Event> results=resolveEventViaSinglePrincipalAttribute(principal,attributeValue,service,context,provider,predicate);
    if (results == null || results.isEmpty()) {
      results=resolveEventViaMultivaluedPrincipalAttribute(principal,attributeValue,service,context,provider,predicate);
    }
    if (results != null && !results.isEmpty()) {
      logger.debug("Resolved set of events based the principal attribute {} are {}",attributeName,results);
      return results;
    }
  }
  logger.debug("No set of events based the principal attribute(s) {} could be matched",attributeNames);
  return null;
}
