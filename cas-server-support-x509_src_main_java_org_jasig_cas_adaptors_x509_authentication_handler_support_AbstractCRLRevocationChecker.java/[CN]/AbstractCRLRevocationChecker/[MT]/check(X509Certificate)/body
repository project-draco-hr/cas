{
  if (cert == null) {
    throw new IllegalArgumentException("Certificate cannot be null.");
  }
  logger.debug("Evaluating certificate revocation status for {}",CertUtils.toString(cert));
  final Collection<X509CRL> crls=getCRLs(cert);
  if (crls == null || crls.isEmpty()) {
    logger.warn("CRL data is not available for {}",CertUtils.toString(cert));
    this.unavailableCRLPolicy.apply(null);
    return;
  }
  final List<X509CRL> expiredCrls=new ArrayList<>();
  final List<X509CRLEntry> revokedCrls=new ArrayList<>();
  final Iterator<X509CRL> it=crls.iterator();
  while (it.hasNext()) {
    final X509CRL crl=it.next();
    if (CertUtils.isExpired(crl)) {
      logger.warn("CRL data expired on {}",crl.getNextUpdate());
      expiredCrls.add(crl);
    }
  }
  if (crls.size() == expiredCrls.size()) {
    logger.warn("All CRLs retrieved have expired. Applying CRL expiration policy...");
    for (    final X509CRL crl : expiredCrls) {
      this.expiredCRLPolicy.apply(crl);
    }
  }
 else {
    crls.removeAll(expiredCrls);
    logger.debug("Valid CRLs [{}] found that are not expired yet",crls);
    for (    final X509CRL crl : crls) {
      final X509CRLEntry entry=crl.getRevokedCertificate(cert);
      if (entry != null) {
        revokedCrls.add(entry);
      }
    }
    if (revokedCrls.size() == crls.size() && !revokedCrls.isEmpty()) {
      final X509CRLEntry entry=revokedCrls.get(0);
      logger.warn("All CRL entries have been revoked. Rejecting the first entry [{}]",entry);
      throw new RevokedCertificateException(entry);
    }
  }
}
