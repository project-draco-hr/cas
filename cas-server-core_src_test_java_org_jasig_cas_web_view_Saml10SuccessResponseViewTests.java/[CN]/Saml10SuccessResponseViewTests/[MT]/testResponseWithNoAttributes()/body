{
  final Map<String,Object> model=new HashMap<String,Object>();
  final SimplePrincipal principal=new SimplePrincipal("testPrincipal");
  final MutableAuthentication authentication=new MutableAuthentication(principal);
  authentication.getAttributes().put(SamlAuthenticationMetaDataPopulator.ATTRIBUTE_AUTHENTICATION_METHOD,SAMLAuthenticationStatement.AuthenticationMethod_SSL_TLS_Client);
  authentication.getAttributes().put("testSamlAttribute","value");
  final List<Authentication> authentications=new ArrayList<Authentication>();
  authentications.add(authentication);
  final Assertion assertion=new ImmutableAssertionImpl(authentications,TestUtils.getService(),true);
  model.put("assertion",assertion);
  final MockWriterHttpMockHttpServletResponse servletResponse=new MockWriterHttpMockHttpServletResponse();
  this.response.renderMergedOutputModel(model,new MockHttpServletRequest(),servletResponse);
  final String written=servletResponse.getWrittenValue();
  assertTrue(written.contains("testPrincipal"));
  assertTrue(written.contains(SAMLAuthenticationStatement.AuthenticationMethod_SSL_TLS_Client));
  assertTrue(written.contains("AuthenticationMethod"));
}
