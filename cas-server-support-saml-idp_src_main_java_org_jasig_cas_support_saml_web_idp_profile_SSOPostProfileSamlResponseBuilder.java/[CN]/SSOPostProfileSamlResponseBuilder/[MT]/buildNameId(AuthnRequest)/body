{
  String requiredNameFormat=null;
  if (authnRequest.getNameIDPolicy() != null) {
    requiredNameFormat=authnRequest.getNameIDPolicy().getFormat();
    if (requiredNameFormat != null && (requiredNameFormat.equals("urn:oasis:names:tc:SAML:2.0:nameid-format:encrypted") || requiredNameFormat.equals(NameID.UNSPECIFIED))) {
      requiredNameFormat=null;
    }
  }
  final List<String> supportedNameFormats=getNameFormats(authnRequest);
  if (requiredNameFormat != null) {
    supportedNameFormats.clear();
    supportedNameFormats.add(requiredNameFormat);
  }
  Map<String,BaseAttribute> principalAttributes=requestContext.getAttributes();
  if (principalAttributes == null || principalAttributes.isEmpty()) {
    if (requiredNameFormat != null) {
      requestContext.setFailureStatus(buildStatus(StatusCode.RESPONDER_URI,StatusCode.INVALID_NAMEID_POLICY_URI,"Format not supported: " + requiredNameFormat));
      throw new SAMLException("No attributes for principal, so NameID format required is not supported");
    }
    logger.debug("No attributes for principal {}, no name identifier will be created.",requestContext.getPrincipalName());
    return null;
  }
  if (!supportedNameFormats.isEmpty()) {
    logger.debug("SP-supported name formats: {}",supportedNameFormats);
  }
 else {
    logger.debug("SP indicated no preferred name formats.");
  }
  try {
    SAML2NameIDEncoder nameIdEncoder;
    for (    BaseAttribute<?> attribute : principalAttributes.values()) {
      for (      AttributeEncoder encoder : attribute.getEncoders()) {
        if (encoder instanceof SAML2NameIDEncoder) {
          nameIdEncoder=(SAML2NameIDEncoder)encoder;
          if (supportedNameFormats.isEmpty() || supportedNameFormats.contains(nameIdEncoder.getNameFormat())) {
            log.debug("Using attribute {} supporting NameID format {} to create the NameID.",attribute.getId(),nameIdEncoder.getNameFormat());
            return nameIdEncoder.encode(attribute);
          }
        }
      }
    }
    if (requiredNameFormat != null) {
      requestContext.setFailureStatus(buildStatus(StatusCode.RESPONDER_URI,StatusCode.INVALID_NAMEID_POLICY_URI,"Format not supported: " + requiredNameFormat));
      throw new ProfileException("No attributes for principal support NameID format required by relying party");
    }
    logger.debug("No attributes for principal {} support an encoding into a supported name ID format.",requestContext.getPrincipalName());
    return null;
  }
 catch (  AttributeEncodingException e) {
    logger.error("Unable to encode NameID attribute",e);
    requestContext.setFailureStatus(buildStatus(StatusCode.RESPONDER_URI,null,"Unable to construct NameID"));
    throw new SAMLException("Unable to encode NameID attribute",e);
  }
}
