{
  final RegisteredServiceViewBean bean=new RegisteredServiceViewBean();
  bean.setAssignedId(svc.getId());
  bean.setServiceId(svc.getServiceId());
  bean.setName(svc.getName());
  bean.setDescription(svc.getDescription());
  if (svc.getLogo() != null) {
    bean.setLogoUrl(svc.getLogo().toExternalForm());
  }
  final RegisteredServiceProxyPolicy policy=svc.getProxyPolicy();
  final ProxyPolicyBean proxyPolicyBean=bean.getProxyPolicy();
  if (policy instanceof RefuseRegisteredServiceProxyPolicy) {
    final RefuseRegisteredServiceProxyPolicy refuse=(RefuseRegisteredServiceProxyPolicy)policy;
    proxyPolicyBean.setType(ProxyPolicyBean.Types.REFUSE.toString());
  }
 else   if (policy instanceof RegexMatchingRegisteredServiceProxyPolicy) {
    final RegexMatchingRegisteredServiceProxyPolicy option=(RegexMatchingRegisteredServiceProxyPolicy)policy;
    proxyPolicyBean.setType(ProxyPolicyBean.Types.ALLOW.toString());
    proxyPolicyBean.setValue(option.getPattern().toString());
  }
  final AbstractAttributeReleasePolicy attrPolicy=(AbstractAttributeReleasePolicy)svc.getAttributeReleasePolicy();
  final AttributeReleasePolicyBean attrPolicyBean=bean.getAttrRelease();
  attrPolicyBean.setReleasePassword(attrPolicy.isAuthorizedToReleaseCredentialPassword());
  attrPolicyBean.setReleaseTicket(attrPolicy.isAuthorizedToReleaseProxyGrantingTicket());
  if (attrPolicy instanceof ReturnAllAttributeReleasePolicy) {
    attrPolicyBean.getAttrPolicy().setType(AttributeReleasePolicyBean.ReleasePolicyStrategy.Types.ALL.toString());
  }
 else   if (attrPolicy instanceof ReturnAllowedAttributeReleasePolicy) {
    final ReturnAllowedAttributeReleasePolicy attrPolicyAllowed=(ReturnAllowedAttributeReleasePolicy)attrPolicy;
    if (attrPolicyAllowed.getAllowedAttributes().isEmpty()) {
      attrPolicyBean.getAttrPolicy().setType(AttributeReleasePolicyBean.ReleasePolicyStrategy.Types.NONE.toString());
    }
 else {
      attrPolicyBean.getAttrPolicy().setType(AttributeReleasePolicyBean.ReleasePolicyStrategy.Types.ALLOWED.toString());
    }
  }
 else   if (attrPolicy instanceof ReturnMappedAttributeReleasePolicy) {
    final ReturnMappedAttributeReleasePolicy attrPolicyAllowed=(ReturnMappedAttributeReleasePolicy)attrPolicy;
    if (attrPolicyAllowed.getAllowedAttributes().isEmpty()) {
      attrPolicyBean.getAttrPolicy().setType(AttributeReleasePolicyBean.ReleasePolicyStrategy.Types.NONE.toString());
    }
 else {
      attrPolicyBean.getAttrPolicy().setType(AttributeReleasePolicyBean.ReleasePolicyStrategy.Types.MAPPED.toString());
    }
  }
  bean.setSasCASEnabled(svc.getAccessStrategy().isServiceAccessAllowed());
  return bean;
}
