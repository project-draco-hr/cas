{
  try {
    if (this.logConfigurationFile == null || !this.logConfigurationFile.exists()) {
      throw new RuntimeException("Log4j configuration file cannot be located");
    }
    if (StringUtils.isNotBlank(this.loggerContextPackageName)) {
      final Collection<URL> set=ClasspathHelper.forPackage(this.loggerContextPackageName);
      final Reflections reflections=new Reflections(new ConfigurationBuilder().addUrls(set).setScanners(new SubTypesScanner()));
      final Set<Class<? extends ServletContextListener>> subTypesOf=reflections.getSubTypesOf(ServletContextListener.class);
      if (subTypesOf.isEmpty()) {
        throw new IllegalArgumentException("No context listeners could be found for " + this.loggerContextPackageName);
      }
      final ServletContextListener loggingContext=subTypesOf.iterator().next().newInstance();
      this.context.setInitParameter(this.logConfigurationField,this.logConfigurationFile.getURI().toString());
      return loggingContext;
    }
    return null;
  }
 catch (  final Exception e) {
    throw new RuntimeException(e);
  }
}
