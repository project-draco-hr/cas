{
  final Credential c=org.jasig.cas.authentication.TestUtils.getCredentialsWithSameUsernameAndPassword();
  final Service service=TestUtils.getService("test");
  final AuthenticationResult ctx=org.jasig.cas.authentication.TestUtils.getAuthenticationResult(getAuthenticationSystemSupport(),service,c);
  final TicketGrantingTicket ticketGrantingTicket=getCentralAuthenticationService().createTicketGrantingTicket(ctx);
  final MockHttpServletRequest request=new MockHttpServletRequest();
  final MockRequestContext context=new MockRequestContext();
  WebUtils.putTicketGrantingTicketInScopes(context,ticketGrantingTicket);
  request.addParameter("renew","true");
  request.addParameter("service",service.getId());
  final Credential c2=org.jasig.cas.authentication.TestUtils.getCredentialsWithDifferentUsernameAndPassword();
  context.setExternalContext(new ServletExternalContext(new MockServletContext(),request,new MockHttpServletResponse()));
  putCredentialInRequestScope(context,c2);
  context.getRequestScope().put("org.springframework.validation.BindException.credentials",new BindException(c2,"credentials"));
  final MessageContext messageContext=mock(MessageContext.class);
  assertEquals("error",this.action.submit(context,c2,messageContext).getId());
}
