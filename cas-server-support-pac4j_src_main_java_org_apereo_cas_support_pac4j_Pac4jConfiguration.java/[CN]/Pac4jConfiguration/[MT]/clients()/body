{
  final List<Client> allClients=new ArrayList<>();
  final Map<String,String> properties=new HashMap<>();
  properties.put(PropertiesConfigFactory.FACEBOOK_ID,this.pac4jProperties.getFacebook().getId());
  properties.put(PropertiesConfigFactory.FACEBOOK_SECRET,this.pac4jProperties.getFacebook().getSecret());
  properties.put(PropertiesConfigFactory.FACEBOOK_SCOPE,this.pac4jProperties.getFacebook().getScope());
  properties.put(PropertiesConfigFactory.FACEBOOK_FIELDS,this.pac4jProperties.getFacebook().getFields());
  properties.put(PropertiesConfigFactory.TWITTER_ID,this.pac4jProperties.getTwitter().getId());
  properties.put(PropertiesConfigFactory.TWITTER_SECRET,this.pac4jProperties.getTwitter().getSecret());
  properties.put(PropertiesConfigFactory.CAS_LOGIN_URL,this.pac4jProperties.getCas().getLoginUrl());
  properties.put(PropertiesConfigFactory.CAS_PROTOCOL,this.pac4jProperties.getCas().getProtocol());
  properties.put(PropertiesConfigFactory.SAML_IDENTITY_PROVIDER_METADATA_PATH,this.pac4jProperties.getSaml().getIdentityProviderMetadataPath());
  properties.put(PropertiesConfigFactory.SAML_KEYSTORE_PASSWORD,this.pac4jProperties.getSaml().getKeystorePassword());
  properties.put(PropertiesConfigFactory.SAML_KEYSTORE_PATH,this.pac4jProperties.getSaml().getKeystorePath());
  properties.put(PropertiesConfigFactory.SAML_MAXIMUM_AUTHENTICATION_LIFETIME,this.pac4jProperties.getSaml().getMaximumAuthenticationLifetime());
  properties.put(PropertiesConfigFactory.SAML_PRIVATE_KEY_PASSWORD,this.pac4jProperties.getSaml().getPrivateKeyPassword());
  properties.put(PropertiesConfigFactory.SAML_SERVICE_PROVIDER_ENTITY_ID,this.pac4jProperties.getSaml().getServiceProviderEntityId());
  properties.put(PropertiesConfigFactory.SAML_SERVICE_PROVIDER_METADATA_PATH,this.pac4jProperties.getSaml().getServiceProviderEntityId());
  properties.put(PropertiesConfigFactory.OIDC_CUSTOM_PARAM_KEY1,this.pac4jProperties.getOidc().getCustomParamKey1());
  properties.put(PropertiesConfigFactory.OIDC_CUSTOM_PARAM_KEY2,this.pac4jProperties.getOidc().getCustomParamKey2());
  properties.put(PropertiesConfigFactory.OIDC_CUSTOM_PARAM_VALUE1,this.pac4jProperties.getOidc().getCustomParamValue1());
  properties.put(PropertiesConfigFactory.OIDC_CUSTOM_PARAM_VALUE2,this.pac4jProperties.getOidc().getCustomParamValue2());
  properties.put(PropertiesConfigFactory.OIDC_DISCOVERY_URI,this.pac4jProperties.getOidc().getDiscoveryUri());
  properties.put(PropertiesConfigFactory.OIDC_ID,this.pac4jProperties.getOidc().getId());
  properties.put(PropertiesConfigFactory.OIDC_MAX_CLOCK_SKEW,this.pac4jProperties.getOidc().getMaxClockSkew());
  properties.put(PropertiesConfigFactory.OIDC_PREFERRED_JWS_ALGORITHM,this.pac4jProperties.getOidc().getPreferredJwsAlgorithm());
  properties.put(PropertiesConfigFactory.OIDC_SECRET,this.pac4jProperties.getOidc().getSecret());
  properties.put(PropertiesConfigFactory.OIDC_USE_NONCE,this.pac4jProperties.getOidc().getUseNonce());
  final ConfigFactory configFactory=new PropertiesConfigFactory(properties);
  final Config propertiesConfig=configFactory.build();
  allClients.addAll(propertiesConfig.getClients().getClients());
  if (this.clients != null && this.clients.length > 0) {
    allClients.addAll(Arrays.<Client>asList(this.clients));
  }
  if (allClients.isEmpty()) {
    throw new IllegalArgumentException("At least one pac4j client must be defined");
  }
  return new Clients(this.serverLoginUrl,allClients);
}
