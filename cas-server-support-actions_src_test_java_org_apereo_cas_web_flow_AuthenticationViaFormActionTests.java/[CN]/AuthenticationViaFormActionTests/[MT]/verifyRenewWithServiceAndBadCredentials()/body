{
  final Credential c=org.apereo.cas.authentication.TestUtils.getCredentialsWithSameUsernameAndPassword();
  final Service service=TestUtils.getService("test");
  final AuthenticationResult ctx=org.apereo.cas.authentication.TestUtils.getAuthenticationResult(getAuthenticationSystemSupport(),service,c);
  final TicketGrantingTicket ticketGrantingTicket=getCentralAuthenticationService().createTicketGrantingTicket(ctx);
  final MockHttpServletRequest request=new MockHttpServletRequest();
  final MockRequestContext context=new MockRequestContext();
  WebUtils.putTicketGrantingTicketInScopes(context,ticketGrantingTicket);
  request.addParameter("renew","true");
  request.addParameter("service",service.getId());
  final Credential c2=org.apereo.cas.authentication.TestUtils.getCredentialsWithDifferentUsernameAndPassword();
  context.setExternalContext(new ServletExternalContext(new MockServletContext(),request,new MockHttpServletResponse()));
  putCredentialInRequestScope(context,c2);
  assertEquals(CasWebflowConstants.TRANSITION_ID_AUTHENTICATION_FAILURE,this.action.doExecute(context).getId());
}
