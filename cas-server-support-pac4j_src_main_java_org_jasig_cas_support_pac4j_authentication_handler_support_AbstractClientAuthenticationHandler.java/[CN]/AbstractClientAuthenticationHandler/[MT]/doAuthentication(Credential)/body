{
  final ClientCredential clientCredentials=(ClientCredential)credential;
  logger.debug("clientCredentials : {}",clientCredentials);
  final String clientName=clientCredentials.getCredentials().getClientName();
  logger.debug("clientName : {}",clientName);
  final Client<Credentials,UserProfile> client=this.clients.findClient(clientName);
  logger.debug("client : {}",client);
  final ServletExternalContext servletExternalContext=(ServletExternalContext)ExternalContextHolder.getExternalContext();
  final HttpServletRequest request=(HttpServletRequest)servletExternalContext.getNativeRequest();
  final HttpServletResponse response=(HttpServletResponse)servletExternalContext.getNativeResponse();
  final WebContext webContext=new J2EContext(request,response);
  final UserProfile userProfile=client.getUserProfile(clientCredentials.getCredentials(),webContext);
  logger.debug("userProfile : {}",userProfile);
  if (userProfile != null) {
    return createResult(clientCredentials,userProfile);
  }
  throw new FailedLoginException("Provider did not produce a user profile for: " + clientCredentials);
}
