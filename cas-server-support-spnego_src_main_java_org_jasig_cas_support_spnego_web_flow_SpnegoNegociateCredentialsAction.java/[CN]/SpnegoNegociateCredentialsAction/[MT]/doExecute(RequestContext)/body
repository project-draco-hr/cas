{
  final HttpServletRequest request=WebUtils.getHttpServletRequest(context);
  final HttpServletResponse response=WebUtils.getHttpServletResponse(context);
  final String authorizationHeader=request.getHeader(SpnegoConstants.HEADER_AUTHORIZATION);
  final String userAgent=WebUtils.getHttpServletRequestUserAgent(request);
  LOGGER.debug("Authorization header [{}], User Agent header [{}]",authorizationHeader,userAgent);
  if (!StringUtils.hasText(userAgent) || this.supportedBrowser.isEmpty()) {
    LOGGER.debug("User Agent header [{}] is empty, or no browsers are supported",userAgent);
    return success();
  }
  if (!isSupportedBrowser(userAgent)) {
    LOGGER.debug("User Agent header [{}] is not supported in the list of supported browsers [{}]",userAgent,this.supportedBrowser);
    return success();
  }
  if (!StringUtils.hasText(authorizationHeader) || !authorizationHeader.startsWith(this.messageBeginPrefix) || authorizationHeader.length() <= this.messageBeginPrefix.length()) {
    final String wwwHeader=this.ntlm ? SpnegoConstants.NTLM : SpnegoConstants.NEGOTIATE;
    LOGGER.debug("Authorization header not found or does not match the message prefix [{}]. Sending [{}] header [{}]",this.messageBeginPrefix,SpnegoConstants.HEADER_AUTHENTICATE,wwwHeader);
    response.setHeader(SpnegoConstants.HEADER_AUTHENTICATE,wwwHeader);
    response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
    if (!this.mixedModeAuthentication) {
      LOGGER.debug("Mixed-mode authentication is disabled. Executing completion of response");
      context.getExternalContext().recordResponseComplete();
    }
  }
  return success();
}
