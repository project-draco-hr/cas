{
  request.addParameter("openid.assoc_handle","test");
  openIdService=OpenIdService.createServiceFrom(request);
  Association association=null;
  try {
    association=Association.generate(Association.TYPE_HMAC_SHA1,"test",60);
  }
 catch (  final Exception e) {
    fail("Could not generate association");
  }
  when(sharedAssociations.load("test")).thenReturn(association);
  final Response response=this.openIdService.getResponse("test");
  try {
    verify(cas).validateServiceTicket("test",openIdService);
  }
 catch (  final Exception e) {
    fail("Error while validating ticket");
  }
  request.removeParameter("openid.assoc_handle");
  assertNotNull(response);
  assertEquals("test",response.getAttributes().get("openid.assoc_handle"));
  assertEquals("http://www.ja-sig.org/?service=fa",response.getAttributes().get("openid.return_to"));
  assertEquals("http://openid.ja-sig.org/battags",response.getAttributes().get("openid.identity"));
}
