{
  final MockHttpServletRequest mockRequest=new MockHttpServletRequest("GET",CONTEXT + OAuthConstants.PROFILE_URL);
  mockRequest.addHeader("Authorization",OAuthConstants.BEARER_TOKEN + ' ' + TGT_ID);
  final MockHttpServletResponse mockResponse=new MockHttpServletResponse();
  oauth20WrapperController.handleRequest(mockRequest,mockResponse);
  assertEquals(200,mockResponse.getStatus());
  assertEquals(CONTENT_TYPE,mockResponse.getContentType());
  final ObjectMapper mapper=new ObjectMapper();
  final String expected="{\"id\":\"" + ID + "\",\"attributes\":[{\""+ NAME+ "\":\""+ VALUE+ "\"},{\""+ NAME2+ "\":[\""+ VALUE+ "\",\""+ VALUE+ "\"]}]}";
  final JsonNode expectedObj=mapper.readTree(expected);
  final JsonNode receivedObj=mapper.readTree(mockResponse.getContentAsString());
  assertEquals(expectedObj.get("id").asText(),receivedObj.get("id").asText());
  final JsonNode expectedAttributes=expectedObj.get("attributes");
  final JsonNode receivedAttributes=receivedObj.get("attributes");
  assertEquals(expectedAttributes.findValue(NAME).asText(),receivedAttributes.findValue(NAME).asText());
  assertEquals(expectedAttributes.findValues(NAME2),receivedAttributes.findValues(NAME2));
}
