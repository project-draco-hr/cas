{
  long evictions;
  long size;
  long capacity;
  String name;
  Map<String,String> statsMap;
  final Map<SocketAddress,Map<String,String>> allStats=memcachedClient.getStats();
  final List<CacheStatistics> statsList=new ArrayList<CacheStatistics>();
  for (  final SocketAddress address : allStats.keySet()) {
    statsMap=allStats.get(address);
    if (statsMap.size() > 0) {
      size=Long.parseLong(statsMap.get("bytes"));
      capacity=Long.parseLong(statsMap.get("limit_maxbytes"));
      evictions=Long.parseLong(statsMap.get("evictions"));
      if (address instanceof InetSocketAddress) {
        name=((InetSocketAddress)address).getHostName();
      }
 else {
        name=address.toString();
      }
      statsList.add(new SimpleCacheStatistics(size,capacity,evictions,name));
    }
  }
  return statsList.toArray(new CacheStatistics[statsList.size()]);
}
