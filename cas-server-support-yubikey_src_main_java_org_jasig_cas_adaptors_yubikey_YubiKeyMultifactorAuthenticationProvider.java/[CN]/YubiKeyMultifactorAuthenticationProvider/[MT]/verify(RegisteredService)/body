{
  try {
    final String[] endpoints=yubiKeyAuthenticationHandler.getClient().getWsapiUrls();
    for (    final String endpoint : endpoints) {
      logger.debug("Pinging YubiKey API endpoint at {}",endpoint);
      final HttpMessage msg=this.httpClient.sendMessageToEndPoint(new URL(endpoint));
      if (msg != null && StringUtils.isNotBlank(msg.getMessage())) {
        final String response=URLDecoder.decode(msg.getMessage(),"UTF-8");
        logger.debug("Received YubiKey ping response {}",response);
        return true;
      }
    }
    throw new IllegalArgumentException("YubiKey WS API url cannot be reached");
  }
 catch (  final Exception e) {
    final RegisteredServiceMultifactorPolicy policy=service.getMultifactorPolicy();
    if (policy != null && policy.getFailureMode() == RegisteredServiceMultifactorPolicy.FailureModes.OPEN) {
      logger.warn("Yubico could not be reached. Since the authentication provider is configured to fail-open, authentication " + "will proceed without Duo for service {}. {}",service.getServiceId(),e);
      return false;
    }
  }
  throw new AuthenticationException();
}
