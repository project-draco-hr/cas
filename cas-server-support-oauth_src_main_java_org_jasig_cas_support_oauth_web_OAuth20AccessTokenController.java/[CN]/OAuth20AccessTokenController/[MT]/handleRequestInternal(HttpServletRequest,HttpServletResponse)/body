{
  if (!verifyAccessTokenRequest(request,response)) {
    return OAuthUtils.writeTextError(response,OAuthConstants.INVALID_REQUEST,HttpStatus.SC_BAD_REQUEST);
  }
  final String codeParameter=request.getParameter(OAuthConstants.CODE);
  final OAuthCode code=ticketRegistry.getTicket(codeParameter,OAuthCode.class);
  if (code == null || code.isExpired()) {
    logger.error("Code expired: {}",code);
    return OAuthUtils.writeTextError(response,OAuthConstants.INVALID_GRANT,HttpStatus.SC_BAD_REQUEST);
  }
  ticketRegistry.deleteTicket(code.getId());
  final Service service=code.getService();
  final Authentication authentication=code.getAuthentication();
  final AccessToken accessToken=generateAccessToken(service,authentication);
  final String text=String.format("%s=%s&%s=%s",OAuthConstants.ACCESS_TOKEN,accessToken.getId(),OAuthConstants.EXPIRES,timeout);
  logger.debug("OAuth access token response: {}",text);
  response.setContentType("text/plain");
  return OAuthUtils.writeText(response,text,HttpStatus.SC_OK);
}
