{
  final String grantType=request.getParameter(OAuthConstants.GRANT_TYPE);
  if (!checkGrantTypes(grantType,OAuthGrantType.AUTHORIZATION_CODE,OAuthGrantType.PASSWORD)) {
    return false;
  }
  final J2EContext context=new J2EContext(request,response);
  final ProfileManager manager=new ProfileManager(context);
  final UserProfile profile=manager.get(true);
  if (profile == null) {
    return false;
  }
  if (OAuthGrantType.AUTHORIZATION_CODE.name().equalsIgnoreCase(grantType)) {
    final String clientId=profile.getId();
    final String redirectUri=request.getParameter(OAuthConstants.REDIRECT_URI);
    return profile instanceof OAuthClientProfile && validator.checkParameterExist(request,OAuthConstants.REDIRECT_URI) && validator.checkParameterExist(request,OAuthConstants.CODE)&& validator.checkCallbackValid(clientId,redirectUri);
  }
 else {
    return profile instanceof OAuthUserProfile;
  }
}
