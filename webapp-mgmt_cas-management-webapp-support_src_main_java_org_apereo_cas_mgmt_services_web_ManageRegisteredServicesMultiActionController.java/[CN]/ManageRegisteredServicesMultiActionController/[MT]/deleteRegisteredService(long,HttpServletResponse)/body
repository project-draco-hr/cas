{
  final RegisteredService svc=this.servicesManager.findServiceBy(this.defaultService);
  if (svc == null || svc.getId() == idAsLong) {
    throw new IllegalArgumentException("The default service " + this.defaultService.getId() + " cannot be deleted. "+ "The definition is required for accessing the application.");
  }
  final RegisteredService r=this.servicesManager.delete(idAsLong);
  if (r == null) {
    throw new IllegalArgumentException("Service id " + idAsLong + " cannot be found.");
  }
  final Map<String,Object> model=new HashMap<>();
  model.put("serviceName",r.getName());
  model.put(STATUS,HttpServletResponse.SC_OK);
  JsonUtils.render(model,response);
}
