{
  logger.debug("Locating the primary authentication associated with this service request {}",assertion.getService());
  final RegisteredService service=this.servicesManager.findServiceBy(assertion.getService());
  RegisteredServiceAccessStrategyUtils.ensureServiceAccessIsAllowed(assertion.getService(),service);
  final Map<String,MultifactorAuthenticationProvider> providers=this.applicationContext.getBeansOfType(MultifactorAuthenticationProvider.class,false,true);
  final Authentication authentication=assertion.getPrimaryAuthentication();
  final Optional<String> requestedContext=this.multifactorTriggerSelectionStrategy.resolve(providers.values(),request,service,authentication.getPrincipal());
  if (!requestedContext.isPresent()) {
    logger.debug("No particular authentication context is required for this request");
    return new Pair<>(Boolean.TRUE,Optional.empty());
  }
  final Pair<Boolean,Optional<MultifactorAuthenticationProvider>> result=this.authenticationContextValidator.validate(authentication,requestedContext.get(),service);
  return result;
}
