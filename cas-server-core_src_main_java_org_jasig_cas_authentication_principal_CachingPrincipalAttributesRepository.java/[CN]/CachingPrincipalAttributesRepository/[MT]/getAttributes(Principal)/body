{
  final Map<String,Object> cachedAttributes=this.cache.get(p.getId());
  if (cachedAttributes != null) {
    LOGGER.debug("Found [{}] cached attributes for principal [{}]",cachedAttributes.size(),p.getId());
    return cachedAttributes;
  }
  final Map<String,List<Object>> sourceAttributes=retrievePersonAttributesToPrincipalAttributes(p.getId());
  LOGGER.debug("Found [{}] attributes for principal [{}] from the attribute repository.",sourceAttributes.size(),p.getId());
  if (this.mergingStrategy == null) {
    LOGGER.debug("No merging strategy found, so attributes retrieved from the repository will be used instead.");
    final Map<String,Object> finalAttributes=convertPersonAttributesToPrincipalAttributes(sourceAttributes);
    addPrincipalAttributesIntoCache(p.getId(),finalAttributes);
    return finalAttributes;
  }
  final Map<String,List<Object>> principalAttributes=convertPrincipalAttributesToPersonAttributes(p);
  LOGGER.debug("Merging current principal attributes with that of the repository via strategy [{}]",this.mergingStrategy.getClass().getSimpleName());
  final Map<String,List<Object>> mergedAttributes=this.mergingStrategy.mergeAttributes(principalAttributes,sourceAttributes);
  final Map<String,Object> finalAttributes=convertPersonAttributesToPrincipalAttributes(mergedAttributes);
  addPrincipalAttributesIntoCache(p.getId(),finalAttributes);
  return finalAttributes;
}
