{
  final Map<String,Exception> errorMap=new LinkedHashMap<String,Exception>();
  String handlerName;
  for (  final AuthenticationHandler authenticationHandler : this.linkedHandlers.keySet()) {
    if (!authenticationHandler.supports(credentials)) {
      continue;
    }
    handlerName=authenticationHandler.getName();
    HandlerResult result=null;
    try {
      result=authenticationHandler.authenticate(credentials);
    }
 catch (    final Exception e) {
      logAuthenticationHandlerError(handlerName,credentials,e);
      errorMap.put(handlerName,e);
    }
    if (result != null) {
      log.info("{} successfully authenticated {}",handlerName,credentials);
      final Principal p=this.linkedHandlers.get(authenticationHandler).resolvePrincipal(credentials);
      if (p == null) {
        throw new PrincipalException("Resolver failed to resolve principal.",errorMap,Collections.singletonMap(handlerName,result));
      }
      return new Pair<AuthenticationHandler,Principal>(authenticationHandler,p);
    }
    log.info("{} failed to authenticate {}",handlerName,credentials);
  }
  if (!errorMap.isEmpty()) {
    throw new AuthenticationException(errorMap);
  }
  throw new AuthenticationException();
}
