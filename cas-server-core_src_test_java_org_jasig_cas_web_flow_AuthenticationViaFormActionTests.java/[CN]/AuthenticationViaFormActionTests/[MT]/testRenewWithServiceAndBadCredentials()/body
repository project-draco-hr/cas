{
  final Credential c=TestUtils.getCredentialsWithSameUsernameAndPassword();
  final TicketGrantingTicket ticketGrantingTicket=getCentralAuthenticationService().createTicketGrantingTicket(c);
  final MockHttpServletRequest request=new MockHttpServletRequest();
  final MockRequestContext context=new MockRequestContext();
  WebUtils.putTicketGrantingTicketInFlowScope(context,ticketGrantingTicket);
  request.addParameter("renew","true");
  request.addParameter("service","test");
  final Credential c2=TestUtils.getCredentialsWithDifferentUsernameAndPassword();
  context.setExternalContext(new ServletExternalContext(new MockServletContext(),request,new MockHttpServletResponse()));
  WebUtils.putCredentialInRequestScope(context,c2);
  context.getRequestScope().put("org.springframework.validation.BindException.credentials",new BindException(c2,"credentials"));
  final MessageContext messageContext=mock(MessageContext.class);
  assertEquals("error",this.action.submit(context,c2,messageContext).getId());
}
