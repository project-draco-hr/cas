{
  final Flow flow=getLoginFlow();
  final Expression expression=createExpression(flow,"flowScope.WsFederationIdentityProviderUrl",String.class);
  final ActionExecutingViewFactory viewFactory=new ActionExecutingViewFactory(new ExternalRedirectAction(expression));
  createEndState(flow,WS_FEDERATION_REDIRECT,viewFactory);
  final ActionState actionState=createActionState(flow,WS_FEDERATION_ACTION,createEvaluateAction(WS_FEDERATION_ACTION));
  actionState.getTransitionSet().add(createTransition(CasWebflowConstants.TRANSITION_ID_SUCCESS,CasWebflowConstants.TRANSITION_ID_SEND_TICKET_GRANTING_TICKET));
  actionState.getTransitionSet().add(createTransition(CasWebflowConstants.TRANSITION_ID_ERROR,getStartState(flow).getId()));
  setStartState(flow,actionState);
  final TransitionableState initLoginState=flow.getTransitionableState(CasWebflowConstants.STATE_ID_INIT_LOGIN_FORM);
  for (  final Transition transition : initLoginState.getTransitionSet()) {
    if (transition.getId().equals(CasWebflowConstants.TRANSITION_ID_GENERATED)) {
      final TargetStateResolver targetStateResolver=(TargetStateResolver)convertClassToTargetType(TargetStateResolver.class).execute(WS_FEDERATION_REDIRECT);
      transition.setTargetStateResolver(targetStateResolver);
      break;
    }
  }
}
