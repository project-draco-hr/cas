{
  final ServiceTicket serviceTicket=new ServiceTicketImpl(id,this,service,this.getCountOfUses() == 0 || credentialsProvided,expirationPolicy);
  updateState();
  final List<Authentication> authentications=getChainedAuthentications();
  service.setPrincipal(authentications.get(authentications.size() - 1).getPrincipal());
  if (onlyTrackMostRecentSession) {
    final String path=normalizePath(service);
    final Collection<Service> existingServices=services.values();
    for (    final Service existingService : existingServices) {
      final String existingPath=normalizePath(existingService);
      if (StringUtils.equals(path,existingPath)) {
        existingServices.remove(existingService);
        LOGGER.trace("removed previous ST for service: {}",existingService);
        break;
      }
    }
  }
  this.services.put(id,service);
  return serviceTicket;
}
