{
  try {
    if (!trustStoreFile.exists() || !trustStoreFile.canRead()) {
      throw new FileNotFoundException("Truststore file cannot be located at " + trustStoreFile.getCanonicalPath());
    }
    final FileInputStream casStream=new FileInputStream(trustStoreFile);
    final KeyStore casTrustStore=KeyStore.getInstance(trustStoreType);
    casTrustStore.load(casStream,trustStorePassword.toCharArray());
    final String defaultAlgorithm=KeyManagerFactory.getDefaultAlgorithm();
    final X509KeyManager customKeyManager=getKeyManager("SunX509",casTrustStore,trustStorePassword.toCharArray());
    final X509KeyManager jvmKeyManager=getKeyManager(defaultAlgorithm,null,null);
    final X509TrustManager customTrustManager=getTrustManager("SunX509",casTrustStore);
    final X509TrustManager jvmTrustManager=getTrustManager(defaultAlgorithm,null);
    final KeyManager[] keyManagers={new CompositeX509KeyManager(Arrays.asList(jvmKeyManager,customKeyManager))};
    final TrustManager[] trustManagers={new CompositeX509TrustManager(Arrays.asList(jvmTrustManager,customTrustManager))};
    final SSLContext context=SSLContexts.custom().useSSL().build();
    context.init(keyManagers,trustManagers,null);
    return context;
  }
 catch (  final Exception e) {
    LOGGER.error(e.getMessage(),e);
    throw new RuntimeException(e);
  }
}
