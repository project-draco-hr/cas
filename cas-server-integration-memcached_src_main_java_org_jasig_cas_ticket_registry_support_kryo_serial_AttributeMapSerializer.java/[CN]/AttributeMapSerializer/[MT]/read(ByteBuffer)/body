{
  final int size=buffer.getInt();
  final Map<String,Object> map=new HashMap<String,Object>(size);
  String key;
  Object value;
  RegisteredClass registeredClass;
  Class<?> valueClass;
  int valueSize;
  for (int i=0; i < size; i++) {
    key=kryo.readObjectData(buffer,String.class);
    registeredClass=kryo.readClass(buffer);
    if (registeredClass != null) {
      valueClass=registeredClass.getType();
      if (ArrayList.class.isAssignableFrom(valueClass)) {
        valueSize=buffer.getInt();
        final ArrayList<Object> items=new ArrayList<Object>(valueSize);
        for (int j=0; j < valueSize; j++) {
          items.add(kryo.readClassAndObject(buffer));
        }
        value=items;
      }
 else       if (String.class.isAssignableFrom(valueClass)) {
        value=kryo.readObjectData(buffer,String.class);
      }
 else {
        throw new IllegalStateException("Unexpected attribute value type " + valueClass);
      }
    }
 else {
      value=null;
    }
    map.put(key,value);
  }
  return map;
}
