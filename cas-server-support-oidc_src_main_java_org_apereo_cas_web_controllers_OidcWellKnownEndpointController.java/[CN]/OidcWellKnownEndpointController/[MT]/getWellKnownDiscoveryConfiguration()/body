{
  final OidcServerDiscoverySettings discoveryProperties=new OidcServerDiscoverySettings(casProperties.getServer().getPrefix(),casProperties.getAuthn().getOidc().getIssuer());
  discoveryProperties.setClaimsSupported(ImmutableList.of(OidcConstants.CLAIM_SUB,"name",OidcConstants.CLAIM_PREFERRED_USERNAME,"family_name","given_name","middle_name","given_name","profile","picture","nickname","website","zoneinfo","locale","updated_at","birthdate","email","email_verified","phone_number","phone_number_verified","address"));
  discoveryProperties.setScopesSupported(OidcConstants.SCOPES);
  discoveryProperties.setResponseTypesSupported(ImmutableList.of("code","token"));
  discoveryProperties.setSubjectTypesSupported(ImmutableList.of("public","pairwise"));
  discoveryProperties.setClaimTypesSupported(ImmutableList.of("normal"));
  discoveryProperties.setGrantTypesSupported(ImmutableList.of("authorization_code","password","implicit"));
  final String idTokenSigningAlgValues=casProperties.getAuthn().getOidc().getIdTokenSigningAlgs();
  discoveryProperties.setIdTokenSigningAlgValuesSupported(Lists.newArrayList(idTokenSigningAlgValues.split(",")));
  return new ResponseEntity(discoveryProperties,HttpStatus.OK);
}
