{
  final HttpServletRequest request=WebUtils.getHttpServletRequest(context);
  final String contextPath=context.getExternalContext().getContextPath();
  final String cookiePath=StringUtils.isNotBlank(contextPath) ? contextPath + '/' : "/";
  if (StringUtils.isBlank(warnCookieGenerator.getCookiePath())) {
    logger.info("Setting path for cookies for warn cookie generator to: {} ",cookiePath);
    this.warnCookieGenerator.setCookiePath(cookiePath);
  }
 else {
    logger.debug("Warning cookie path is set to {} and path {}",warnCookieGenerator.getCookieDomain(),warnCookieGenerator.getCookiePath());
  }
  if (StringUtils.isBlank(ticketGrantingTicketCookieGenerator.getCookiePath())) {
    logger.info("Setting path for cookies for TGC cookie generator to: {} ",cookiePath);
    this.ticketGrantingTicketCookieGenerator.setCookiePath(cookiePath);
  }
 else {
    logger.debug("TGC cookie path is set to {} and path {}",ticketGrantingTicketCookieGenerator.getCookieDomain(),ticketGrantingTicketCookieGenerator.getCookiePath());
  }
  WebUtils.putTicketGrantingTicketInScopes(context,this.ticketGrantingTicketCookieGenerator.retrieveCookieValue(request));
  WebUtils.putWarningCookie(context,Boolean.valueOf(this.warnCookieGenerator.retrieveCookieValue(request)));
  final RegisteredServiceAccessStrategy accessStrategy=registeredService.getAccessStrategy();
  if (accessStrategy.getUnauthorizedRedirectUrl() != null) {
    logger.debug("Placing registered service's unauthorized redirect url [{}] with id [{}] in context scope",accessStrategy.getUnauthorizedRedirectUrl(),registeredService.getServiceId());
    WebUtils.putUnauthorizedRedirectUrl(context,accessStrategy.getUnauthorizedRedirectUrl());
  }
}
