{
  final Service service=WebUtils.getService(this.argumentExtractors,context);
  if (service != null) {
    logger.debug("Placing service in context scope: [{}]",service.getId());
    final RegisteredService registeredService=this.servicesManager.findServiceBy(service);
    RegisteredServiceAccessStrategySupport.ensureServiceAccessIsAllowed(service,registeredService);
    logger.debug("Placing registered service [{}] with id [{}] in context scope",registeredService.getServiceId(),registeredService.getId());
    WebUtils.putRegisteredService(context,registeredService);
  }
 else   if (!this.enableFlowOnAbsentServiceRequest) {
    logger.warn("No service authentication request is available at [{}]. CAS is configured to disable the flow.",WebUtils.getHttpServletRequest(context).getRequestURL());
    throw new NoSuchFlowExecutionException(context.getFlowExecutionContext().getKey(),new UnauthorizedServiceException("screen.service.required.message","Service is required"));
  }
  WebUtils.putService(context,service);
}
