{
  final SingleLogoutService service=new WebApplicationServiceFactory().createService(TEST_URL,SingleLogoutService.class);
  final LogoutRequest logoutRequest=new DefaultLogoutRequest(TICKET_ID,service,new URL(TEST_URL));
  final Event event=getLogoutEvent(Arrays.asList(logoutRequest));
  assertEquals(FrontChannelLogoutAction.REDIRECT_APP_EVENT,event.getId());
  final List<LogoutRequest> list=WebUtils.getLogoutRequests(this.requestContext);
  assertEquals(1,list.size());
  final String url=(String)event.getAttributes().get(FrontChannelLogoutAction.DEFAULT_FLOW_ATTRIBUTE_LOGOUT_URL);
  assertTrue(url.startsWith(TEST_URL + '?' + FrontChannelLogoutAction.DEFAULT_LOGOUT_PARAMETER+ '='));
  final byte[] samlMessage=EncodingUtils.decodeBase64(URLDecoder.decode(StringUtils.substringAfter(url,'?' + FrontChannelLogoutAction.DEFAULT_LOGOUT_PARAMETER + '='),"UTF-8"));
  final Inflater decompresser=new Inflater();
  decompresser.setInput(samlMessage);
  final byte[] result=new byte[1000];
  decompresser.inflate(result);
  decompresser.end();
  final String message=new String(result);
  assertTrue(message.startsWith("<samlp:LogoutRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" ID=\""));
  assertTrue(message.contains("<samlp:SessionIndex>" + TICKET_ID + "</samlp:SessionIndex>"));
}
