{
  final AuthenticationResult authenticationContext=authenticationSystemSupport.finalizeAllAuthenticationTransactions(authenticationContextBuilder,WebUtils.getService(context));
  if (authenticationContext.getService() != null) {
    final RegisteredService registeredService=this.servicesManager.findServiceBy(authenticationContext.getService());
    RegisteredServiceAccessStrategySupport.ensureServiceAccessIsAllowed(authenticationContext.getService(),registeredService);
    if (StringUtils.isNotBlank(registeredService.getAuthenticationPolicy().getAuthenticationMethod())) {
      return buildEventByServiceAuthenticationMethod(context,registeredService,authenticationContextBuilder,authenticationContext);
    }
  }
  final TicketGrantingTicket tgt=this.centralAuthenticationService.createTicketGrantingTicket(authenticationContext);
  WebUtils.putTicketGrantingTicketInScopes(context,tgt);
  if (addWarningMessagesToMessageContextIfNeeded(tgt,messageContext)) {
    return newEvent(SUCCESS_WITH_WARNINGS);
  }
  return newEvent(AbstractCasWebflowConfigurer.TRANSITION_ID_SUCCESS);
}
