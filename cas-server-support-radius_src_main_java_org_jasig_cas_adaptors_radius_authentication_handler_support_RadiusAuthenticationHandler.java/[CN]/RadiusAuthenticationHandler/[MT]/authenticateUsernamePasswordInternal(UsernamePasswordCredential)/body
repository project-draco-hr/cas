{
  final String password=getPasswordEncoder().encode(credential.getPassword());
  final String username=credential.getUsername();
  for (  final RadiusServer radiusServer : this.servers) {
    logger.debug("Attempting to authenticate {} at {}",username,radiusServer);
    try {
      final RadiusResponse response=radiusServer.authenticate(username,password);
      if (response != null) {
        return createHandlerResult(credential,new SimplePrincipal(username),null);
      }
      if (!this.failoverOnAuthenticationFailure) {
        throw new FailedLoginException("Radius authentication failed for user " + username);
      }
      logger.debug("failoverOnAuthenticationFailure enabled -- trying next server");
    }
 catch (    final PreventedException e) {
      if (!this.failoverOnException) {
        throw e;
      }
      logger.warn("failoverOnException enabled -- trying next server.",e);
    }
  }
  throw new FailedLoginException("Radius authentication failed for user " + username);
}
