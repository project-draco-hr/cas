{
  String[] attributeIds;
  final List<String> attributeList=new ArrayList<String>();
  attributeList.add(this.dateAttribute);
  if (this.warningDaysAttribute != null) {
    attributeList.add(this.warningDaysAttribute);
  }
  if (this.validDaysAttribute != null) {
    attributeList.add(this.validDaysAttribute);
  }
  if (this.noWarnAttribute != null) {
    attributeList.add(this.noWarnAttribute);
  }
  attributeIds=new String[attributeList.size()];
  attributeList.toArray(attributeIds);
  final String searchFilter=LdapUtils.getFilterWithValues(this.filter,userId);
  log.debug("Starting search with searchFilter: {}",searchFilter);
  String attributeListLog=attributeIds[0];
  for (int i=1; i < attributeIds.length; i++) {
    attributeListLog=attributeListLog.concat(":" + attributeIds[i]);
  }
  log.debug("Returning attributes {}",attributeListLog);
  try {
    final AttributesMapper mapper=new AttributesMapper(){
      @Override public Object mapFromAttributes(      final Attributes attrs) throws NamingException {
        final LdapPasswordPolicyResult result=new LdapPasswordPolicyResult(userId);
        if (LdapPasswordPolicyEnforcer.this.dateAttribute != null) {
          if (attrs.get(LdapPasswordPolicyEnforcer.this.dateAttribute) != null) {
            final String date=(String)attrs.get(LdapPasswordPolicyEnforcer.this.dateAttribute).get();
            result.setDateResult(date);
          }
        }
        if (LdapPasswordPolicyEnforcer.this.warningDaysAttribute != null) {
          if (attrs.get(LdapPasswordPolicyEnforcer.this.warningDaysAttribute) != null) {
            final String warn=(String)attrs.get(LdapPasswordPolicyEnforcer.this.warningDaysAttribute).get();
            result.setWarnDaysResult(warn);
          }
        }
        if (LdapPasswordPolicyEnforcer.this.noWarnAttribute != null) {
          if (attrs.get(LdapPasswordPolicyEnforcer.this.noWarnAttribute) != null) {
            final String attrib=(String)attrs.get(LdapPasswordPolicyEnforcer.this.noWarnAttribute).get();
            result.setNoWarnAttributeResult(attrib);
          }
        }
        if (attrs.get(LdapPasswordPolicyEnforcer.this.validDaysAttribute) != null) {
          final String valid=(String)attrs.get(LdapPasswordPolicyEnforcer.this.validDaysAttribute).get();
          result.setValidDaysResult(valid);
        }
        return result;
      }
    }
;
    final List<?> LdapResultList=this.ldapTemplate.search(this.searchBase,searchFilter,getSearchControls(attributeIds),mapper);
    if (LdapResultList.size() > 0) {
      return (LdapPasswordPolicyResult)LdapResultList.get(0);
    }
  }
 catch (  final Exception e) {
    log.error(e.getMessage(),e);
  }
  return null;
}
