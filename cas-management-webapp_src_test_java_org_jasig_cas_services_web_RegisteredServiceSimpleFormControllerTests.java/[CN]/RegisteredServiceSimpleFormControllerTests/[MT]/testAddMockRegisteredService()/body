{
  final MockHttpServletRequest request=new MockHttpServletRequest();
  final MockHttpServletResponse response=new MockHttpServletResponse();
  request.addParameter("description","description");
  request.addParameter("serviceId","serviceId");
  request.addParameter("name","name");
  request.addParameter("theme","theme");
  request.addParameter("allowedToProxy","true");
  request.addParameter("enabled","true");
  request.addParameter("ssoEnabled","true");
  request.addParameter("anonymousAccess","false");
  request.addParameter("evaluationOrder","1");
  request.setMethod("POST");
  assertTrue(this.manager.getAllServices().isEmpty());
  this.controller.setCommandClass(MockRegisteredService.class);
  this.controller.handleRequest(request,response);
  final Collection<RegisteredService> services=this.manager.getAllServices();
  assertEquals(1,services.size());
  for (  RegisteredService rs : this.manager.getAllServices()) {
    assertTrue(rs instanceof MockRegisteredService);
  }
}
