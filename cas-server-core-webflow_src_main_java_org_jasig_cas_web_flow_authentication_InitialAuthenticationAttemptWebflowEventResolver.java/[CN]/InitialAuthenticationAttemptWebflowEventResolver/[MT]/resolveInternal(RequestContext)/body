{
  try {
    final Credential credential=getCredentialFromContext(context);
    final AuthenticationResultBuilder builder=this.authenticationSystemSupport.handleInitialAuthenticationTransaction(credential);
    WebUtils.putAuthenticationResultBuilder(builder,context);
    WebUtils.putAuthentication(builder.getInitialAuthentication(),context);
    final Service service=WebUtils.getService(context);
    if (service != null) {
      final RegisteredService registeredService=this.servicesManager.findServiceBy(service);
      RegisteredServiceAccessStrategySupport.ensureServiceAccessIsAllowed(service,registeredService);
      final Event event=registeredServiceAuthenticationPolicyWebflowEventResolver.resolve(context);
      if (event != null) {
        return event;
      }
    }
    return grantTicketGrantingTicketToAuthenticationResult(context,builder,service);
  }
 catch (  final Exception e) {
    Event event=returnAuthenticationExceptionEventIfNeeded(e);
    if (event == null) {
      logger.debug(e.getMessage(),e);
      event=newEvent(CasWebflowConstants.TRANSITION_ID_ERROR,e);
    }
    return event;
  }
}
