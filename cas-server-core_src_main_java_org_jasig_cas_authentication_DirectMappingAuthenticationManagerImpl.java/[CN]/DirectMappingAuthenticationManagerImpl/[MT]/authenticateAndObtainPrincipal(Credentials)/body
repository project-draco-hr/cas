{
  final Class<? extends Credentials> credentialsClass=credentials.getClass();
  final DirectAuthenticationHandlerMappingHolder d=this.credentialsMapping.get(credentialsClass);
  if (d == null) {
    log.debug("No mapping found for: {}",credentialsClass.getName());
    throw new AuthenticationException();
  }
  final String handlerName=d.getAuthenticationHandler().getName();
  final HandlerResult result;
  try {
    result=d.getAuthenticationHandler().authenticate(credentials);
  }
 catch (  final Exception e) {
    logAuthenticationHandlerError(handlerName,credentials,e);
    log.info("{} failed to authenticate {}",handlerName,credentials);
    throw new AuthenticationException(Collections.singletonMap(handlerName,e),Collections.<String,HandlerResult>emptyMap());
  }
  log.info("{} successfully authenticated {}",handlerName,credentials);
  final Principal p=d.getCredentialsToPrincipalResolver().resolvePrincipal(credentials);
  if (p == null) {
    throw new PrincipalException("Resolver failed to resolve principal.",Collections.<String,Exception>emptyMap(),Collections.singletonMap(handlerName,result));
  }
  return new Pair<AuthenticationHandler,Principal>(d.getAuthenticationHandler(),p);
}
