{
  final String ticketGrantingTicketId=WebUtils.getTicketGrantingTicketId(context);
  final String openidIdentityParameter=context.getRequestParameters().get(OpenIdProtocolConstants.OPENID_IDENTITY);
  String userName=null;
  if (OpenIdProtocolConstants.OPENID_IDENTIFIERSELECT.equals(openidIdentityParameter)) {
    userName=OpenIdProtocolConstants.OPENID_IDENTIFIERSELECT;
    context.getExternalContext().getSessionMap().remove(OpenIdProtocolConstants.OPENID_LOCALID);
    if (ticketGrantingTicketId != null) {
      try {
        final TicketGrantingTicket tgt=getCentralAuthenticationService().getTicket(ticketGrantingTicketId,TicketGrantingTicket.class);
        userName=tgt.getAuthentication().getPrincipal().getId();
      }
 catch (      final InvalidTicketException e) {
        logger.error("Cannot get TGT",e);
      }
    }
  }
 else {
    userName=this.extractor.extractLocalUsernameFromUri(openidIdentityParameter);
    context.getExternalContext().getSessionMap().put(OpenIdProtocolConstants.OPENID_LOCALID,userName);
  }
  final Service service=WebUtils.getService(context);
  if (service instanceof OpenIdService && userName == null) {
    context.getFlowScope().remove("service");
  }
  if (ticketGrantingTicketId == null || userName == null) {
    return null;
  }
  return new OpenIdCredential(ticketGrantingTicketId,userName);
}
