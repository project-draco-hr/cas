{
  final RegisteredService svc=getRegisteredService();
  when(this.servicesManager.findServiceBy(any(SingleLogoutService.class))).thenReturn(svc);
  final SingleLogoutService service=mock(SingleLogoutService.class);
  when(service.getId()).thenReturn(svc.getServiceId());
  when(service.getOriginalUrl()).thenReturn(svc.getServiceId());
  final MockTicketGrantingTicket tgt=new MockTicketGrantingTicket("test");
  tgt.getServices().put("service",service);
  final Event event=getLogoutEvent(this.logoutManager.performLogout(tgt));
  assertEquals(FrontChannelLogoutAction.REDIRECT_APP_EVENT,event.getId());
  final List<LogoutRequest> list=WebUtils.getLogoutRequests(this.requestContext);
  assertEquals(1,list.size());
  final String url=(String)event.getAttributes().get(FrontChannelLogoutAction.DEFAULT_FLOW_ATTRIBUTE_LOGOUT_URL);
  assertTrue(url.startsWith(svc.getLogoutUrl().toExternalForm()));
}
